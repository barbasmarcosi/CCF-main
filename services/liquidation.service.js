const boom = require("@hapi/boom");
const { models } = require("../libs/sequelize");
const fs = require("fs");
const JSZip = require("jszip");
const { Op } = require("sequelize");
const pdf = require("html-pdf");

const puppeteer = require("puppeteer");

class LiquidationService {
  constructor() {}

  async backup() {
    const liquidations = await models.Liquidation.findAll();
    const backup = liquidations
      .map(
        (liquidation) =>
          `INSERT INTO liquidations VALUES (${Object.entries(
            liquidation.dataValues
          ).map((entry) =>
            entry[0] == "createdAt"
              ? `'${new Date(entry[1]).toISOString()}'`
              : `'${entry[1]}'`
          )})`
      )
      .join(";\n");
    fs.writeFileSync("./backup/liquidations.txt", backup);
  }

  async create(data) {
    let res = false;
    const retentions = await models.Retention.findAll({
      where: {
        personId: {
          [Op.eq]: data.personId,
        },
      },
    });
    const liquidations = await models.Liquidation.findAll();
    const creditNotes = await models.CreditNote.findAll({
      where: {
        personId: {
          [Op.eq]: data.personId,
        },
      },
    });
    console.log(creditNotes);
    const liquidationDate = new Date();
    const maxAllowed = Number(data.maxAllowed);
    const pendentCreditNotes = creditNotes.filter(
      (creditNote) => !creditNote.state && !creditNote.liquidationId
    );
    console.log(pendentCreditNotes);
    let creditNotesAmount = 0;
    if (pendentCreditNotes.length) {
      creditNotesAmount = pendentCreditNotes.reduce(
        (a, b) => a + Number(b.amount),
        0
      );
    }
    const retentionMonth = retentions.filter(
      (retention) =>
        retention.retentionDate.getFullYear() ==
          liquidationDate.getFullYear() &&
        retention.retentionDate.getMonth() == liquidationDate.getMonth() &&
        !retention.state
    );
    if (retentionMonth.length) {
      const bills = await models.Bill.findAll();
      const verifyMax = bills.filter((bill) => bill.personId == data.personId);
      const prevLiq = liquidations.filter(
        (liquidation) =>
          liquidation.personId == data.personId &&
          liquidation.dataValues.createdAt.getFullYear() ==
            liquidationDate.getFullYear() &&
          liquidation.dataValues.createdAt.getMonth() ==
            liquidationDate.getMonth() &&
          !liquidation.state
      );
      let prevLiqAmount = 0;
      if (prevLiq.length) {
        prevLiqAmount = prevLiq.reduce((a, b) => a + Number(b.monthAmount), 0);
      }

      let monthAmount = 0;
      verifyMax.map((bill) => (monthAmount += bill.finalAmount));
      const monthBills = bills.filter((bill) => {
        return (
          bill.personId == data.personId && !bill.state && !bill.liquidationId
        );
      });
      if (monthBills.length) {
        try {
          let total = 0;
          monthBills.map(async (bill) => {
            total =
              total +
              (bill.finalAmount -
                bill.finalAmount * (bill.adminExpenses / 100));
          });
          let retainedAmount;
          let retention;
          if (monthAmount >= maxAllowed && prevLiqAmount == 0) {
            retainedAmount = (total - maxAllowed) * retentionMonth[0].retention;
            retention = retentionMonth[0].retention * 100;
          } else if (prevLiqAmount > maxAllowed) {
            retainedAmount = total * retentionMonth[0].retention;
            retention = retentionMonth[0].retention * 100;
          } else if (prevLiqAmount <= maxAllowed) {
            retainedAmount =
              (total - (maxAllowed - prevLiqAmount)) *
              retentionMonth[0].retention;
            retention = retentionMonth[0].retention * 100;
          } else {
            retainedAmount = 0;
            retention = 0;
          }
          if (total) {
            res = true;
            await models.Liquidation.create({
              monthAmount: total + creditNotesAmount,
              retainedAmount: retainedAmount,
              personId: data.personId,
              retention: retention,
              state: false,
            });
            const id = liquidations.length + 1;
            monthBills.map(async (bill) => {
              await bill.update({
                liquidationId: id,
              });
            });
            if (pendentCreditNotes.length) {
              pendentCreditNotes.map(async (creditNote) => {
                await creditNote.update({
                  liquidationId: id,
                });
              });
            }
          }
        } catch (e) {
          throw boom.internal("Hubo un error interno, vuleva a intentar luego");
        }
      } else {
        throw boom.notFound("Esta persona no posee facturas sin liquidar");
      }
    } else {
      throw boom.notFound(
        "Esta persona no posee una rentencion asignada en la fecha solicitada"
      );
    }
    return res;
  }

  async afip(period) {
    const firstSplit = period.split("_");
    let from;
    let to;
    const secondSplit = firstSplit[0].split("-");
    if (firstSplit[1] == 1) {
      from = new Date(secondSplit[0], secondSplit[1], 1);
      to = new Date(secondSplit[0], secondSplit[1], 16);
    } else {
      from = new Date(secondSplit[0], secondSplit[1], 16);
      to = new Date(secondSplit[0], Number(secondSplit[1]) + 1, 0);
    }
    const liquidations = await models.Liquidation.findAll({
      include: ["person"],
    });
    const filtered = liquidations.filter(
      (liquidation) =>
        new Date(liquidation.createdAt) > from &&
        new Date(liquidation.createdAt) < to &&
        !liquidation.state
    );
    if (!filtered.length) {
      throw boom.notFound(
        "No se encuentran liquidaciones en el periodo seleccionado"
      );
    }
    const txt = filtered
      .map((liquidation) => {
        const cuit = liquidation.person.cuit;
        const formattedCuit = `${cuit.slice(0, 2)}-${cuit.slice(
          2,
          10
        )}-${cuit.slice(10, 12)}`;
        const date = new Date(liquidation.createdAt)
          .toLocaleDateString()
          .slice(0, 10)
          .split("/");
        const formattedDate = `${date[0].padStart(2, "0")}/${date[1].padStart(
          2,
          "0"
        )}/${date[2]}`;
        return `${formattedCuit}${formattedDate}${`${liquidation.id}`.padStart(
          12,
          "0"
        )}${`${liquidation.retainedAmount.toFixed(2)}`.padStart(11, "0")}A`;
      })
      .join("\n")
      .replace(/(\.)/g, ",");
    const txtPath = `newFiles/AR-30667354508-${secondSplit[0]}${`${
      Number(secondSplit[1]) + 1
    }`.padStart(2, "0")}${firstSplit[1]}-6-R${secondSplit[0]}-${`${
      Number(secondSplit[1]) + 1
    }`.padStart(2, "0")}`;
    const generateTxt = async () => {
      try {
        await fs.writeFileSync(`${txtPath}.txt`, txt);
        return true;
      } catch (e) {
        console.log("Cannot write file ", e);
        return false;
      }
    };

    const content = `
    <!doctype html>
    <html>
       <head>
            <meta charset="utf-8">
            <title>Informe de liquidaci√≥n</title>
        </head>
        <body style="display: flex; flex-direction: column; margin: 2rem 2rem 2rem 2rem;">
          <div style="font-weight: bold; display: -webkit-box;">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width=100
              height=100
              color='rgb(255, 17, 17)'
              viewBox="0 0 959 959"
              >
                <path d="M391.3 76.8c-1.5 1-6.5 11.2-5.4 11.2 1.4 0 8.1-7.8 8.1-9.4 0-1.9-1.3-2.7-2.7-1.8zM462.5 81.9c-10.5 2.6-16.9 10.8-16.9 21.6 0 12.6 9.4 22.5 21.4 22.5 16 0 26-17.7 18.5-32.7-2.8-5.6-7.7-9.5-14-11.2-4.4-1.2-4.7-1.2-9-.2zm11.6 10.4c4.3 2.9 5.9 6 5.9 12 0 4.2-.5 5.3-3.8 8.8-2.8 3.1-4.7 4.1-7.7 4.5-4.7.6-9.8-1.7-12.7-5.7-2.3-3.1-2.8-10.2-.9-14.6 2.9-7 12.6-9.5 19.2-5zM424.3 85.7c-1.3.2-2.3.8-2.3 1.3 0 1.6 4 35.5 4.5 38.7.4 2.4 1.1 3.3 2.5 3.3 2.6 0 17.4-2.1 17.8-2.5.2-.2.1-1.7-.3-3.4l-.6-3.1-5.8.6-5.7.6-1.8-14.3c-2.9-24.4-2.1-22.4-8.3-21.2zM506.9 87.7c-7.8 4-11.2 9.3-11.7 18.3-.3 5.6 0 7.8 1.8 11.4 5.9 12.3 20 16 30.5 8.1 3.4-2.7 7.5-10.6 7.5-14.8 0-2.3-.5-2.5-7.5-3.6-11.4-1.7-11.5-1.7-11.5 2.4 0 3 .3 3.5 2.5 3.6 1.4.1 3 .3 3.5.4.6.1 1.7.3 2.5.4 2.3.2 1.8 2-1.4 5.2-2.3 2.3-3.8 2.9-7.2 2.9-3.6 0-4.8-.6-8.5-4.4-3.9-3.9-4.4-4.8-4.4-9 0-8.8 6.1-15.6 14-15.6 3.8 0 4.8.5 8.6 4.4l4.2 4.4 2.1-2.2c2.6-2.8 2.6-3.1-.1-6.8-2.6-3.7-11-7.8-15.9-7.8-1.9 0-6 1.2-9 2.7zM389.7 91.7c-8.5 2.9-14.7 11.8-14.7 21.3 0 4.5 3.9 12.7 7.6 16.2 13.7 12.8 35.3 3 35.4-16 0-15.4-14.2-26.3-28.3-21.5zm13.4 8.8c4.2 2.2 6.9 7.1 6.9 12.5 0 15.5-20 19-25.6 4.5-1.4-3.9-1.5-5.1-.4-9.1 2.3-8 11.4-11.8 19.1-7.9zM553.3 99.2c-2.3 3.5-8.3 11.9-13.2 18.8-4.9 6.9-8.7 12.8-8.3 13.1.4.4 2.2.9 4 1.2 2.9.6 3.5.3 5.9-3.1l2.7-3.8 7.1 1.9c3.8 1.1 7.5 2.4 8.2 2.9.7.5 1.3 2.8 1.5 5.1.3 3.7.6 4.2 3.7 4.9 1.8.5 3.5.7 3.7.5.8-.8-3.1-43.9-4.1-45.3-.5-.7-2.3-1.6-4-1.9-2.8-.5-3.3-.1-7.2 5.7zm6.1 14.7c.7 7.8.6 8.3-1.1 7.7-1-.4-3-1-4.6-1.3-1.5-.3-3-1-3.3-1.5-.5-.8 7.6-14.2 8.2-13.5.1.1.5 4 .8 8.6zM353.8 103c-4.8 1.4-8.6 4.9-11.2 10.2-3.3 6.6-3.4 12.6-.2 19.4 3.1 6.7 6.9 10.1 13.4 12 5.7 1.7 9.5 1.3 15.3-1.6 5.3-2.8 6.1-4.1 4.8-8.1-1.6-4.5-1.7-4.6-3.5-2.1-5.8 8.3-19.1 5.9-22.9-4.3-2.1-5.4-1.4-10.3 2.1-14.4 2.7-3.2 8.4-5.6 11.5-4.8 2.1.6 2.4-.8.9-4.7-.8-2.1-1.6-2.6-4.2-2.5-1.8 0-4.5.4-6 .9zM585 107.2c-7.2 4.9-7.2 14.3 0 21.3 5.9 5.7 5.3 11.5-1.2 11.5-2.7 0-6.1-2.4-7-5-.3-1-1.1-.9-3.6.4-3.6 1.8-3.5 3.4.6 7.8 5.4 5.9 13.6 6.1 19.1.4 6.3-6.5 5.9-13.7-1.3-20.5-2.3-2.3-3.6-4.4-3.6-6.1 0-5.5 4.7-6.6 8.9-2.1l2.8 2.9 2.8-2.2c2.5-2 2.6-2.5 1.6-4.5-1.5-2.7-8.4-6-12.7-6.1-1.7 0-4.6 1-6.4 2.2zM323.4 116.7l-3.2 1.6 9.3 18.9c5.1 10.4 9.5 19.2 9.8 19.4.7.8 6.7-2.5 6.7-3.6 0-1.4-18.4-38-19-37.9-.3 0-1.9.7-3.6 1.6zM624.9 119.8c0 .9 0 6.5.1 12.5l.1 10.7-5 9.1c-2.8 5-4.8 9.5-4.5 10 .3.5 1.8 1.6 3.4 2.4l2.9 1.5 5-9.3 5-9.2 10.6-6.5c5.8-3.5 10.5-6.7 10.5-7 0-.4-1.6-1.4-3.6-2.4l-3.6-1.7-6.2 4.1c-3.4 2.2-6.5 4-6.9 4-.4 0-.7-3.6-.7-7.9v-7.9l-3.5-2.1c-3.2-1.8-3.5-1.9-3.6-.3zM305 125.9c-9.6 5.1-11.4 15.2-3.9 21.5 2.7 2.3 3.9 2.6 10.9 2.6 5.8 0 8.3.4 9.4 1.6 3.9 3.9-.1 9.8-6.2 9.2-3.6-.3-3.7-.2-4 3.4l-.3 3.8h4.6c5.3 0 9.5-1.9 12.4-5.6 2.9-3.7 2.8-11-.2-15.5-3.3-4.9-6.1-6-13.5-5.3-5.2.5-6.6.3-8.2-1.1-4-3.6-1.4-8.5 4.5-8.5 2.9 0 3.3-.3 3.8-3.3.2-1.7.3-3.5 0-4-.8-1.3-5.7-.7-9.3 1.2zM272.7 147.2c-5 3.4-7.6 5.8-7.4 6.8.2.8 5.2 8.2 11.2 16.5 5.9 8.2 11 15.6 11.2 16.2.7 1.8 2.1 1.6 5.4-.8l2.9-2-4.7-6.6-4.7-6.6 3.8-3c7-5.6 8.5-12.5 4.2-18.8-2.6-3.8-7.9-6.9-11.8-6.9-1.3 0-5.9 2.4-10.1 5.2zm14.8 6.9c1.8 3.4.5 7-3.2 9-2.1 1.1-2.6 1.1-3.3-.1-.5-.8-2-3-3.4-4.9-2.9-3.8-2.6-4.8 1.7-6.6 3.9-1.6 6.5-.9 8.2 2.6zM446.5 144.1c-56.9 5.3-109.8 26.4-153.9 61.2-9.1 7.2-34.3 31.5-40.6 39.2-14.8 17.9-24 31.7-34 50.7-22.7 42.9-33 84.8-33 133.8 0 30.2 3 52.3 10.6 78.7 20.1 69.6 63.4 126.8 124.8 164.8 42.5 26.2 89.5 40.3 140.6 42.2 56.2 2 112.2-13 160.5-43 23-14.3 51.5-39.1 68.1-59.3 35-42.5 55.9-89.8 64.1-144.9 2.5-17.1 2.5-60.3 0-76.5-4.5-28.6-12.7-56.9-23-79.5-28.2-61.4-73.9-108.6-134.2-138.5-28.5-14.1-57-22.8-90.5-27.5-14-1.9-45.8-2.7-59.5-1.4zm40.2 3.9c25.1 1.7 44.9 5.3 66.8 12.1 44.5 13.9 82.7 37 115.6 69.8 63.1 63.2 92.6 151.7 79.9 239.6-12.1 83.4-61.2 157.3-133.5 201-7.6 4.6-34.7 18.5-36.1 18.5-.4 0-4.7 1.6-9.6 3.6-18.1 7.2-46.5 14.1-68.8 16.5-14.8 1.7-47.3 1.7-62 0-76.3-8.6-146.9-48.6-193.1-109.6-27.8-36.6-45.6-78.2-54-126-2-11.6-2.3-16.3-2.3-43.5-.1-33.9.6-40.5 7-67 3.1-12.8 5.2-19.3 11.9-38 5.6-15.6 23.5-47.7 35.8-64 48-63.8 118.1-103.6 197.2-112 19.4-2 27.7-2.2 45.2-1z" />
                <path d="M447 178.1c-5.5.8-19.7 2.5-46.5 5.5-7.7.9-14.1 1.7-14.1 1.8-.4.3 3.7 25.8 6.1 38.1 19 97 48.2 156.3 85 172.6 2.6 1.2 8 2.4 11.9 2.8l7.1.6.7 15c.9 20.6 2.1 57.1 6.3 188 .8 25.3 1.8 53.5 2.1 62.8l.7 16.7 6.6-.6c15-1.3 29.3-3.6 37.7-6 16.2-4.7 34.6-15.2 40.2-23.2l2.1-2.9-5.8-6.8c-15.7-18.1-28.9-47.9-41.9-94.5-7.5-26.5-15-68.9-20.7-115.6-3.1-26-3.2-32.4-.7-32.4 1 0 4.9-1.9 8.8-4.2 30.5-18.3 50.3-48 61.4-91.8 4.8-19.1 6.2-30.5 6.4-53l.1-20.5-3-5.8c-5.5-10.9-19.3-21.1-32.3-23.8-8.1-1.7-27.2-.6-34.2 1.9-9.5 3.3-14.2 6.2-20.6 12.6-15.9 15.9-20.5 41.8-15 83.6 4.2 31.5 4.8 38.1 4.1 45.2-.9 8.7-2.1 10.3-6.8 9.4-5.7-1.1-9.4-5-14.2-15-7.2-15-12.8-39.6-16.9-74.1-3.1-25.2-5.3-51.2-6.1-69.5-.7-14.5-1.1-18.1-2.3-17.9-.4.1-3.2.5-6.2 1zm110.5 56.5c9.7 4.5 15.5 14.1 15.5 25.5 0 17.7-10.8 38.1-34.6 65.4-8.2 9.4-18.3 18-19.6 16.7-.6-.6-.8-17.8-.6-43.8l.3-42.9 2.6-5.5c7.4-15.9 22.3-22.1 36.4-15.4zM659 160.7c-5.7 7.6-11.4 15.2-12.7 17l-2.4 3.1 3.2 2.3 3.2 2.2 3.1-3.8c1.7-2.2 4-5 5.1-6.3l2.1-2.4 3.9 2.6c5.1 3.5 7.9 4.1 12.6 2.7 7.5-2.3 12.1-12.5 8.4-18.7-1.7-2.9-13.3-12.4-15.1-12.4-.6 0-5.7 6.2-11.4 13.7zm17.3-.9c2.5 2.2 2.2 7.7-.5 9.6-3.1 2.2-5.2 2-8.3-.7l-2.6-2.2 3.6-4.8c3.6-4.8 4.2-4.9 7.8-1.9zM239.5 174.4l-8 7.4 7.7 8.3c4.3 4.6 10.8 11.8 14.6 15.9l6.9 7.4 3.9-3.1c2.1-1.7 5.9-5.2 8.3-7.7 4.4-4.5 4.4-4.6 2.6-6.6-2.5-2.8-3.6-2.6-8 2-2.1 2.2-4.4 4-5 4-1.3 0-6.5-5.2-6.5-6.4 0-.4 2.1-2.7 4.7-5l4.6-4.2-1.8-2.7c-.9-1.5-2.3-2.7-2.9-2.7-.7 0-3.2 2-5.6 4.5l-4.4 4.5-3.8-3.7c-2.1-2-3.8-4.2-3.8-4.8 0-.6 2-2.8 4.5-4.8 2.5-2.1 4.5-4.2 4.5-4.6 0-.8-3.4-5.1-4.1-5.1-.2 0-4 3.3-8.4 7.4zM690.9 174.3c-1.9 1.3-4 3.9-4.8 6.1-1.4 3.6-1.3 4.3.7 10 2.6 7.3 2.7 8.9.6 11-3 3.1-9.4.7-9.4-3.5 0-3-1.7-4.1-4.9-3.4-3.6.8-4 2.6-1.5 7.8 1.8 3.8 8.6 8.7 12.1 8.7 3.8 0 9.9-3.7 12.2-7.3 2.6-4.3 2.6-7.3.1-12.8-2.7-6-2.6-9.3.4-10.8 3.2-1.8 6.5 0 7.3 4 .6 3 1.7 3.4 6.1 2.3 1.9-.6 2.2-1.1 1.7-3.2-.3-1.4-1.5-3.7-2.6-5.1-5-6.4-12-7.8-18-3.8zM712.8 194.3c-3.6 3.4-10.8 10.2-15.9 15l-9.2 8.9 2.9 2.9 2.9 2.9 15.3-14.6c8.3-8 15.2-15 15.2-15.4 0-.5-1-2-2.3-3.4l-2.3-2.5-6.6 6.2zM221.3 195.1c-2 .6-5.9 3.9-10.8 9.2l-7.6 8.2 5.8 5.4c3.2 2.9 10.5 9.4 16.2 14.4l10.4 9.1 5.4-6c5.5-6.1 9.3-12.9 9.3-16.8 0-4.7-3.2-11.3-7.3-15.3-7.1-7-15.2-10-21.4-8.2zm12.2 11.1c4 2.7 8.5 9.3 8.5 12.5 0 3-2.1 7.2-4.9 9.7-2 1.8-2.1 1.7-12.6-7.4-5.8-5.1-10.5-9.5-10.5-9.9 0-1 6.2-6.7 8-7.4 2.6-1.1 8.1.1 11.5 2.5zM718.2 211.2c-13.6 6.6-16.9 24.2-6.3 34 4.7 4.4 6.9 4.7 9.9 1.5l2.2-2.3-3.5-1.7c-4.5-2.1-6.8-5.9-6.8-11 0-5.8 2.6-10.3 7.3-12.7 8.9-4.5 18.3-.7 20.6 8.4l.6 2.5 3-2.2c2.5-1.8 2.9-2.7 2.4-5.1-.9-4.4-5.3-9.6-10-11.7-5.5-2.5-13.9-2.4-19.4.3zM187.2 239.3c-7.2 2.7-13.1 11.4-13.2 19.2 0 5.5 4 13.5 8.5 17.2 9.8 8.2 24.9 6.5 32-3.6 2.4-3.4 3-5.4 3.3-10.9.2-5.8-.1-7.4-2.5-11.7-3.9-6.8-10.1-10.6-18.5-11.1-3.6-.2-7.7.2-9.6.9zm15.9 8.9c6.1 3.4 8.7 11.7 5.6 17.8-1.8 3.5-7.4 7-11.4 7-4.7 0-9.9-2.6-12.4-6.2-8.6-12 5.1-26 18.2-18.6zM740.5 239.6c-8.5 3.1-13.5 10.7-13.5 20.7 0 5.6.4 7.1 3.3 11.3 4.3 6.4 9.3 8.9 17.7 8.9 10.5-.1 18.1-5.4 21.6-15.2 3.6-10.2-1.4-21.7-11.3-25.8-4.4-1.9-12.5-1.8-17.8.1zm16.1 8.6c3.7 2.9 4.2 3.5 5.5 8.1 2.8 10.4-10.3 20.3-20.2 15.2-8.6-4.5-9.2-17.5-1.1-23 4.8-3.3 11.7-3.4 15.8-.3zM768 240.9c0 1.3 10.8 5.4 12.5 4.7 2.2-.8 1.8-2.5-.7-3.5-3.6-1.3-11.8-2.1-11.8-1.2zM161.2 276.5c-.7 1.4-1.2 3-1.2 3.5 0 .9 38 20.5 38.4 19.8 0-.2.7-1.3 1.4-2.5.6-1.3 1.2-2.9 1.2-3.7 0-1.3-34.9-19.6-37.5-19.6-.6 0-1.7 1.1-2.3 2.5zM762.2 283.5c-10.5 5.2-19.2 9.7-19.2 10 0 .8 8.2 17.5 8.6 17.5 1.3 0 5.4-2.5 5.4-3.3 0-.6-1-3-2.1-5.4-1.2-2.4-2-4.6-1.8-4.8.2-.1 7.4-3.8 15.9-8 8.5-4.3 15.6-7.9 15.8-8 .2-.2-.5-1.9-1.5-3.9l-1.8-3.5-19.3 9.4zM157.1 295.3c-2.4 1.2-5.7 4.2-7.5 6.6-2.7 3.8-3.1 5.1-3.1 11 0 9.2 3.6 15.2 11.5 19.4 4.8 2.5 6.3 2.8 12.2 2.5 5.6-.3 7.4-.9 11-3.5 10.6-7.7 11.9-22.7 2.5-30.4-1.2-1-3.9-2.7-5.9-3.9l-3.8-2.1-1.9 4.3c-6 13.5-6 13.8-1.3 15.3 1.9.5 2.5 0 4.2-3.9 1-2.5 2.4-4.6 2.9-4.6 1.9 0 4.3 4.9 4.3 8.5 0 9.5-11 15.4-20.2 10.7-10.8-5.4-10.5-20.6.5-24.2l3.4-1.1-1.6-3.5c-.9-1.9-2-3.4-2.3-3.4-.4 0-2.6 1-4.9 2.3zM772.2 302.8c-5.2 2.1-11 7.5-12.9 12.1-2.4 5.6-1.9 13.5 1.2 18.7 7 12 24.3 14.1 34.4 4.2 4.7-4.6 7.1-9.9 7.1-15.5-.1-15.2-15.4-25.2-29.8-19.5zm14.6 8.2c4 2.5 7.2 7.5 7.2 11.5 0 1.6-.9 4.5-2 6.3-5.5 8.9-18 9.7-23.9 1.3-5.8-8.1 1.5-21.1 11.9-21.1 1.9 0 5 .9 6.8 2zM135.7 342.9c-3.6 12-3.5 12.7 1 13.6 2 .3 10.4 2.6 18.7 5 8.3 2.4 15.9 4.5 16.9 4.7 1.6.2 2.4-1.3 4.8-9.7 1.6-5.5 2.9-10.3 2.9-10.7 0-.3-1.4-.9-3.1-1.3-3.7-.8-4.2-.3-5.8 7.1-.7 3-1.5 5.4-1.8 5.4-.7 0-8.6-2.3-9.1-2.6-.2-.1.5-3.1 1.4-6.8 1-3.6 1.6-6.8 1.3-7.1-.3-.2-1.9-.7-3.6-1.1-2.9-.6-3-.5-4.8 6.1l-1.8 6.6-3.1-.7c-8.2-1.8-8.8-2.8-6.1-10.5 1.7-4.6 1.3-5.4-2.6-6.4-2.4-.6-2.6-.3-5.2 8.4zM789.1 348.1c-3.9 1.2-9.9 4.8-12.3 7.6-8.6 9.6-4.6 27.6 6.9 31.4 3.4 1.1 15 1.6 15.9.6.3-.3-.5-4.6-1.6-9.6l-2.2-9.2-3.1.7c-4.2.9-4.2.8-2.9 5.3.7 2.1 1.2 4.3 1.2 5 0 1.5-2.5 1.4-5.9-.3-5-2.6-6.5-9.8-3.5-16.1 2.4-5.1 5.9-6.9 13.1-7 5.5 0 6.5.3 9.2 2.9 1.7 1.6 3.6 4.5 4.2 6.3 1 3 .8 4.1-1.5 8.5-1.4 2.7-2.6 5.1-2.6 5.3 0 .1 1.4.8 3.1 1.6 3 1.2 3.3 1.1 5.5-1.6 2.9-3.6 4-11.6 2.5-17.3-2.7-9.8-16.1-17.1-26-14.1zM165.7 369.7c-.2.5-1 3.1-1.6 5.9l-1.2 5-17.2-3.3c-9.5-1.8-17.5-3.3-17.8-3.3-.7 0-2.2 7-1.7 7.6.4.3 40.4 8.4 41.9 8.4.4 0 1-1.9 1.4-4.3.3-2.3 1.1-6.6 1.7-9.5.6-2.8.9-5.4.7-5.6-1-.8-5.8-1.5-6.2-.9zM132.9 395.7c-15.9 8.1-15.7 29.2.5 37.5 5.7 3 16 2.9 20.9-.1 11.5-7.1 14.7-19 8.1-29.9-3.8-6.1-11.4-10.2-18.9-10.2-3.6 0-6.7.8-10.6 2.7zm18.2 7.6c4.6 3 7.3 8.7 6.4 13.4-.9 4.8-6 9.9-10.9 10.8-5.2 1-12.2-1.8-14.7-5.9-2.4-3.9-2.5-11.3-.3-14.5 4.3-6.1 13.4-7.9 19.5-3.8zM792 395.6c-1.9.8-4.6 2.5-5.9 3.7-3.1 2.9-7.1 11.4-7.1 15.2 0 16.6 17.4 26.6 32.9 18.9 5.6-2.8 10.4-8.8 11.6-14.6 1.9-8.4-3.2-18.4-11.5-22.6-5.3-2.6-14.6-2.9-20-.6zm17.6 8.6c4 2.8 5.4 5.6 5.4 11.2 0 7.2-6 12.7-13.9 12.8-13.5.2-19-16.9-7.8-24.1 4.5-2.9 12.1-2.8 16.3.1zM122.4 439.8c-1.7 1-2.7 8.5-1.9 13.3.6 3.2 2 5.5 5.9 9.4 4.3 4.4 6 5.5 10.7 6.5 10.6 2.3 20.4-2.1 24.8-11.3 2.4-4.9 2.6-9.2.9-14.8-1-3.7-1.4-3.9-5-3.9-2.1 0-3.8.2-3.8.4s.7 2 1.5 3.9c2.1 5 1.9 6.7-1.2 11.5-4.7 7.2-13.6 9-20.5 4-5.4-3.8-6.8-9.7-4.3-17.6.7-2 .4-2.2-2.6-2.2-1.9 0-3.9.4-4.5.8zM783.6 442.9c-4.7 5.2-4 14.9 1.5 19.5 2.5 2.1 4.1 2.6 8.5 2.6 7.3 0 8.9-1 12.3-7.8 3.8-7.5 5.4-8.9 8.7-7.4 3.5 1.6 4 3.9 1.9 7.9-1.8 3.4-1.8 3.4.6 5.1 3.4 2.4 4.2 2.2 6.1-1.8 3.7-7.3 1.3-15-5.6-18-7.6-3.4-13.6-.9-17.8 7.5-4 7.8-7 9.3-10.9 5.4-2.3-2.3-2-6 .9-9.2 1.5-1.7 1.5-2-.8-3.8-3.1-2.3-3.3-2.3-5.4 0zM758.1 550.9c-5.4 5.4-6.2 12.9-1.8 16.9 4.6 4.2 9.3 3.5 14.6-2.2 2.9-3.1 6.6-3.4 8.1-.6 1.3 2.4 0 5.4-3 7-2.4 1.3-2.5 2-.7 4.4 1.1 1.6 1.7 1.7 3.6.7 3.3-1.8 6.1-7.1 6.1-11.4 0-2.9-.7-4.6-2.9-6.8-4.4-4.3-8.7-4-14.6 1.1-5.1 4.4-5.5 4.6-7.3 2.8-1.9-1.9-1.4-5.6.8-7 2.3-1.5 2.5-2.7.7-5.3-1.3-1.7-1.5-1.7-3.6.4zM173 563.1c-2.5 1.6-8.2 5-12.7 7.6-4.6 2.6-8.3 5.1-8.3 5.6 0 1 5.2 10.1 7.3 12.8 1.9 2.5 7.9 5.9 10.3 5.9 3.7 0 10.8-3 13.8-5.8 3.7-3.5 5.8-8.5 5-12-.9-3.7-8.6-17.1-9.9-17.1-.5 0-3 1.4-5.5 3zm7.4 9.4c3.3 6.8-1.2 14.1-9.3 15.2-3.8.5-4.6.2-7.7-2.8-1.9-1.8-3.4-4-3.4-4.8.1-1.6 16.9-12.2 18.1-11.5.4.2 1.4 2 2.3 3.9zM747.5 571.2c-.4 1.1-2 4.3-3.6 7s-2.9 5.4-2.9 6.1c0 .7 2.6 2.5 5.7 4.2 3.1 1.6 9.2 4.9 13.4 7.2 4.2 2.4 7.9 4.3 8.2 4.3.3 0 2.4-3.4 4.7-7.5 3.4-6.1 4-7.9 3-9-1.9-2.2-3.5-1.8-4.9 1.2-.7 1.6-1.9 3.8-2.7 5-1.3 2.1-1.5 2.2-4.4.5-1.6-.9-3-2-3-2.5 0-.4 1.1-2.5 2.5-4.7 3.1-4.8 3.1-5.7.3-6.5-2.3-.8-5.3 2.1-6.4 6.2-.7 2.7-1.5 2.8-5.4.8-3.6-1.9-3.6-2.2-.8-8 1.9-4 2-4.7.8-5.5-2.4-1.5-3.8-1.2-4.5 1.2zM183 596.2c-6.9 4.9-12.6 9.4-12.8 9.8-.2.4 2.1 3.9 4.9 7.8 4.5 6 5.5 6.9 7.1 6.1 2.4-1.3 2.3-2.4-.6-6.2-3.7-5-3.7-5.3-.6-7.5l2.9-2.2 3.2 4.5c3.6 5 3.7 5.1 6.3 3.2 1.7-1.3 1.6-1.6-1.5-6.1l-3.3-4.7 2.9-2.4c1.7-1.3 3.3-2.4 3.7-2.5.4 0 2.1 2 3.8 4.5 2.7 4 3.4 4.4 5.1 3.4 1.2-.6 1.8-1.7 1.5-2.5-.6-1.4-9.6-14.5-9.9-14.3-.1 0-5.8 4.1-12.7 9.1zM736.2 592.7c-1.5.6-9.2 11.7-9.2 13.2 0 .9 11.1 8.5 23.1 15.8l3.5 2.2 1.7-2.8 1.7-2.9-4.5-2.9c-2.5-1.5-4.5-3.1-4.5-3.4 0-.4 3.2-.9 7-1.1 5.4-.4 7.4-1 8.5-2.4 3-4 2-4.7-6-3.9l-7.5.7v-4c0-5.9-3-9.2-8.3-9.1-2.3 0-4.8.3-5.5.6zm7 7c2.1 1.9 2.2 3.9.5 7l-1.3 2.3-3.7-2.5c-4.3-3-4.4-3.4-1.7-6.3 2.5-2.6 3.7-2.7 6.2-.5zM721.8 612.4c-2.1 2.9-2.2 2.7 13.5 14l10.7 7.8 2-2.4c1.1-1.3 1.9-2.5 1.9-2.8 0-.6-24.1-18.3-25.5-18.7-.5-.1-1.7.8-2.6 2.1zM203 622.2c-6.3 5.4-11.6 10.3-11.8 10.8-.2.4 2.2 3.4 5.2 6.6 5.1 5.5 5.6 5.8 7.2 4.2 1.6-1.6 1.5-1.8-1-4.8-1.4-1.7-2.6-3.7-2.6-4.3.1-.7 2.2-2.9 4.8-5 2.6-2.1 6.9-5.7 9.5-8.1 4.9-4.4 4.9-4.4 3.2-7-1-1.4-2-2.6-2.4-2.5-.3 0-5.8 4.6-12.1 10.1zM708.1 630.4c-1.2 2.2-.6 3.7 6.5 17.5l7.8 15.1 2.4-2.3c2.3-2.4 2.3-2.5.7-5.7l-1.7-3.2 4-4.7c3.7-4.3 4.3-4.6 8.2-4.3 3.1.2 4.6-.2 5.6-1.5.7-1 1.4-2.1 1.4-2.4 0-.8-29.8-10.9-32.1-10.9-.9 0-2.1 1.1-2.8 2.4zm13.2 7.2c2.6.9 4.7 1.9 4.7 2.4 0 1.5-4.2 6-5.1 5.4-.9-.5-4.9-7.8-4.9-8.9 0-.7.1-.7 5.3 1.1zM234 636c-.8.5-7.1 3.2-14 6-16.3 6.6-16 6.4-13.3 9.1 2 2 2.5 2.1 5.3.9 3-1.3 3.3-1.1 7.8 3.1 2.6 2.4 4.8 4.5 5 4.6.2.1-.1 1.8-.8 3.8-1.1 3.3-1 3.9.9 5.8 1.1 1.2 2.3 1.9 2.5 1.6.3-.2 3.4-7.4 7.1-15.8l6.6-15.4-2.2-2.4c-2.5-2.6-2.8-2.7-4.9-1.3zm-2 8.4c0 1.3-4 9.6-4.7 9.6-1 0-5.3-4.2-5.3-5.2 0-.5 1.9-1.7 4.3-2.8 4.3-1.9 5.7-2.3 5.7-1.6zM686.2 654c-7.2 4.4-8.9 12.1-3.6 16.7 3 2.7 6.3 2.9 12.6.6 3.9-1.4 4.9-1.4 6.2-.4 3.3 2.7.4 8.1-4.2 8.1-1.8 0-2.2.6-2.2 3s.4 3 2.3 3c3.5 0 8.7-3.7 10.2-7.5 2-4.5.9-9-2.7-12s-4-3-11.1-.6c-4.9 1.7-5.9 1.8-7.1.6-2.1-2.1-.8-5.5 2.5-6.7 2.3-.8 2.9-1.6 2.9-3.9 0-3.4-1.3-3.6-5.8-.9zM255 660.7c-1.9 2.6-6.3 8.2-9.7 12.5l-6.2 7.8 2.1 2c1.2 1.1 2.5 2 2.9 2 .3 0 2.3-2 4.3-4.5l3.7-4.4 3.6 2.4c9.2 6.3 20.3-.9 16.3-10.5-.9-2.3-11.8-12.1-13.2-12-.1 0-1.9 2.2-3.8 4.7zm9.2 6c5 4.5-1 11.1-6.4 6.9-2.3-1.7-2.2-2.2.3-5.7 2.3-3.3 3.5-3.6 6.1-1.2zM270.7 685.1l-8.7 13.1 2.4 1.9c1.3 1 2.6 1.9 2.9 1.9.3 0 1.8-2 3.4-4.5 1.5-2.5 3.1-4.5 3.6-4.5.4 0 .7 3.1.7 6.9 0 6.4.2 7.1 2.8 9.1l2.7 2.2.3-8.1c.3-8.1.3-8.1 2.8-7.5 3.7.9 8-1.3 9.9-5.2 1.8-3.9 1.3-6.8-1.8-10.2-1.9-2.1-10.8-8.2-11.9-8.2-.2 0-4.4 5.9-9.1 13.1zm15.2-2.7c4 4.2.5 8.7-5.5 7.2-2.9-.8-3-1.9-.3-6.2 2.5-4 2.9-4.1 5.8-1zM663.2 673.7c-4.4 2.1-8.9 7.4-10.3 12.2-3.1 10.3 4.5 20.1 15.6 20.1 9.9 0 17.6-7.1 18.3-16.8.3-4.7 0-6.3-2-9.2-5.1-7.5-13.9-10.1-21.6-6.3zm13.5 6.8c3.4 2.2 4.7 7.6 2.9 11.9-1.6 3.9-6.7 7.6-10.4 7.6-3.1 0-7.9-2.6-9.2-4.9-.5-1.1-1-3.8-1-6 0-3.1.7-4.6 3-7 4.3-4.3 9.6-4.8 14.7-1.6z" />
                <path d="M301.4 690c-13.2 3.1-16.8 20.1-6.1 29.1 3.1 2.7 11.3 4.9 15 4.2 13.2-2.4 18.2-17.8 8.9-27.6-4.8-5.1-11.6-7.2-17.8-5.7zm12.2 9.4c2.9 2.9 3.4 4.1 3.4 7.9 0 3.8-.5 4.9-3.1 7.1-8.3 7-20.8-.8-18-11.2 1.3-4.5 5.1-7.1 10.5-7.2 3 0 4.5.7 7.2 3.4zM640.8 690.4c-1 .7-1.8 1.7-1.8 2.1 0 .5 2.1 4.4 4.6 8.7 2.6 4.3 4.5 8 4.3 8.2-.2.2-5.3-1.6-11.3-4-12.1-4.9-13.5-5.1-16.4-2.7-2 1.8-2 1.9 6 15.5l8 13.8 2.9-1.7c1.6-1 2.9-2 2.9-2.3 0-.3-2.3-4.3-5.1-8.9-2.8-4.5-4.9-8.5-4.6-8.7.3-.3 5.5 1.5 11.6 4 11.9 5 13.7 5.3 16.6 3.2 1.7-1.2 1.4-2.1-6.1-14.9-4.3-7.5-8.3-13.6-8.9-13.6-.5 0-1.8.6-2.7 1.3zM327.6 707.1c-.3 3.4-.6 11.3-.6 17.4v11.3l2.6.6c2.3.6 3.9-.6 14.5-11.1 6.5-6.4 11.9-12.1 11.9-12.4 0-.4-1.4-1-3.1-1.4-2.9-.7-3.6-.1-10.9 7.4-4.2 4.5-8 8.1-8.4 8.1-.4 0-.4-5.3 0-11.9.7-11.4.6-11.9-1.4-13-3.4-1.8-3.9-1.3-4.6 5zM605.8 708.7c-4.3 2-7.8 4-7.8 4.5 0 1.8 13 28.3 13.8 28.1.4-.1 4.3-1.8 8.5-3.7 7.2-3.2 7.7-3.7 6.7-5.6-1.3-2.5-2.1-2.5-7 0-2.2 1.1-4.2 2-4.4 2-.3 0-1.2-1.3-2-2.9-1.8-3.3-1.4-3.8 4.7-6.6 3.8-1.8 4.4-2.9 2.8-5.4-.8-1.2-1.7-1.1-6.1.8-2.9 1.2-5.4 2.1-5.6 1.9-.2-.2-1-2-1.8-4l-1.5-3.6 4.9-2.1c5.1-2.2 5.5-2.7 4.4-5.5-.8-2.1-.7-2.1-9.6 2.1zM357.6 718.2c-7.6 20.4-9.3 25.4-8.7 26 .3.4 1.7.9 3.1 1.3 2.5.6 2.7.2 8.1-14.2 5.7-15.2 5.8-15.3 1.2-16.7-1.8-.6-2.3-.1-3.7 3.6zM590.8 715.7c-2.5.6-2.3 1.7 1.8 12.9 1.9 5.4 3.3 10.8 3 11.9-.6 2.3-4.4 4.5-7.6 4.5-2.1 0-5.6-4-6.5-7.3-.3-1.2-1.7-5.4-3.1-9.4l-2.5-7.1-3 1c-1.6.5-2.9 1.5-2.9 2.1 0 .7 1.4 5.4 3.2 10.6 5.5 15.7 10.4 18.9 21.8 14 3.6-1.5 5.3-3 6.5-5.6 1.6-3.4 1.6-3.9-.1-9.7-5.2-17.1-6.3-19.1-10.6-17.9zM368 720.5c-.5 1.4-1.3 3.8-1.6 5.3-.3 1.5-2 7.1-3.6 12.5-1.7 5.4-2.9 9.9-2.7 10.1.2.2 1.8.7 3.5 1 2.9.6 3.2.4 3.8-2.1 1.9-7.4 4.9-16.3 5.6-16.3.4 0 1 .9 1.3 2 .3 1.1 2.2 6.5 4.4 11.9 3.6 9.5 5.6 12.1 9.3 12.1.8 0 4.5-11.1 7.5-22.5.8-2.8 1.6-5.7 2-6.6.5-1.2-.2-2-2.5-2.7-3.5-1.3-3.3-1.6-7.1 10.8-1.2 3.9-2.5 6.8-2.9 6.3-.4-.4-2.6-5.7-5-11.6-2.4-6-5-11.2-6.1-11.7-3-1.6-4.9-1.1-5.9 1.5zM556 727.3c-2.5.4-6.1 1.3-8.1 1.8l-3.6.9 3.7 15.2c2.1 8.4 4.2 15.4 4.8 15.6 1.8.6 16.6-3.9 18.4-5.5 4-3.6 2.6-13.3-2.1-14.8-1.6-.5-1.9-1.4-1.8-4.9.1-3-.4-5-1.6-6.4-2.4-2.6-4.3-3-9.7-1.9zm4.2 7.1c1.5 2.2.7 3.7-2.4 5.1-3.8 1.6-3.6 1.7-4.8-2.4-.8-2.8-.6-3.3 1.3-4 2.4-.9 4.8-.4 5.9 1.3zm5.8 12.1c2.6 3.1-1.5 7.5-7 7.5-2.5 0-4-6.7-1.9-8.1 2.2-1.4 7.5-1 8.9.6zM406.8 732c-12.6 6.8-12.3 23.2.6 29.1 5.5 2.5 11.2 2.5 12.6 0 1.8-3.4 1.1-4-4.1-3.9-4.5 0-5.6-.4-8.3-3.1-5.8-5.8-3.4-14.9 4.5-17.2 4-1.2 4.6-1.2 11 1.5 1.2.5 1.8 0 2.1-1.9.7-3.5-2.7-5.7-9.5-6.2-3.8-.2-6.2.2-8.9 1.7zM429.5 735.2c-2.1 12.5-4.2 28.4-3.8 29 .9 1.6 6.2.8 6.7-1 .8-2.9 4-29.2 3.5-29.6-.2-.2-1.6-.6-3.1-1-2.5-.6-2.8-.3-3.3 2.6zM520.6 733.1c-3.2.5-6.1 1.1-6.5 1.4-.6.7 3.4 30.4 4.3 31.2.3.4 4.4.1 9.1-.6 8.1-1.2 8.5-1.4 8.5-3.8 0-2.5-.1-2.5-5.9-1.9l-5.9.7-.7-3.2c-.8-3.5.4-4.9 4.5-4.9 5.1-.1 6.7-1 6.2-3.7-.5-2.4-.6-2.4-6.3-1.8l-5.9.7-.1-3.1c-.1-1.7-.2-3.7-.3-4.3-.1-.8 2-1.6 5.2-2.1 4.6-.8 5.2-1.1 5.2-3.3 0-2.7-1-2.8-11.4-1.3zM444.6 749.9c-4.2 8.3-7.6 15.2-7.6 15.5 0 .3 1.5.6 3.4.6 2.8 0 3.6-.5 4.6-3.1 1.3-3 1.5-3.1 5.8-2.5 2.5.3 5.5.6 6.8.6 1.8 0 2.8.9 3.8 3.5 1.3 3 2 3.5 4.7 3.5 2.3 0 3-.4 2.5-1.5-.3-.8-1.7-5.4-3.1-10.2-6.5-21.7-6.3-21.3-10-21.3-3.3 0-3.5.2-10.9 14.9zm12.3-1c1.9 5.9 1.6 6.7-2.9 6.3-2.2-.2-4-.8-4-1.3 0-1.8 4.5-9.7 5.1-9.1.4.4 1.1 2.2 1.8 4.1zM488.6 735.8l-5.9.3.6 11.2c.4 6.2.7 13.4.7 16.1v4.9l8.9-.5c10.7-.6 14.3-2.4 17.3-8.6 3.8-8.1.7-19.7-6.1-22.4-3.1-1.2-7.5-1.5-15.5-1zm12.9 7.6c2.9 2.9 3.9 6.5 3.1 10.9-.8 4.5-4.2 7.5-9.4 8.3l-4.2.7v-4.4c0-2.4-.3-7.4-.7-11.2l-.6-6.7h4.7c3.6 0 5.2.5 7.1 2.4zM367.7 824.4c-4.6 1.7-6.1 2.9-8.8 7.2-3.4 5.6-2.5 15.9 1.9 20.8.9 1 5.2 3.6 9.4 5.7 10.3 5.2 12.4 9.4 7.2 14.6-2.1 2.1-3.2 2.5-6.6 2-2.2-.3-5-1.5-6.2-2.6-1.2-1.2-2.5-2.1-2.9-2.1-.4 0-1.9 1.8-3.4 4.1l-2.7 4 3 2.4c4.3 3.6 8.9 4.8 15.5 4.2 6.9-.6 11.1-3.2 13.8-8.5 2.6-5.3 3.3-8.8 2.5-13.9-.9-6-4.4-9.8-12.7-13.9-3.8-1.8-7.6-3.9-8.3-4.5-2-1.7-1.7-7.3.4-9.2 2.7-2.4 8.1-2.1 11 .5l2.4 2.3 3.4-4c1.8-2.2 3.2-4.4 3.1-5-1.3-4-15.2-6.7-22-4.1zM557.2 824.9c-16.6 5.7-24.6 27.7-16.1 44.4 3 5.8 10.4 12.4 16.2 14.3 6.5 2.2 17.6 1.5 23.2-1.4 9.4-4.8 15.6-14.6 16.3-25.8 1.5-22.8-18.6-38.8-39.6-31.5zm20.5 13c10.2 7.4 11 23.3 1.5 31.3C566.5 879.9 549 871 549 854c0-11.6 7.3-19 18.6-19 5.2 0 6.7.4 10.1 2.9zM281 854v30h14.3c13.6 0 14.4-.2 19.2-2.8 10-5.5 14.3-15.5 13.2-30.9-.8-11.1-2.2-14.9-7.6-20.3-5.6-5.6-7.3-6-25.8-6H281v30zm27-18.2c2.5 1.2 4.3 3.3 6.3 7.2 2.5 4.9 2.8 6.3 2.4 12.6-.7 12.8-6.2 18.4-17.9 18.4h-6.7v-18.5c0-10.3.3-19.3.6-20 .8-2.2 10.9-2 15.3.3zM337 854v30h12v-60h-12v30zM395.2 828.7l.3 4.8 5.8.3 5.7.3V884h11v-49.9l5.8-.3 5.7-.3.3-4.8.3-4.7h-35.2l.3 4.7zM437 853.8c0 21 .3 30.1 1.1 30.4.6.2 3.2.1 5.7-.2l4.6-.5-.2-10.8c-.1-5.9.2-10.7.6-10.7.4 0 3.9 4.9 7.7 11l7 10.9h6.3c4.8.1 6.1-.2 5.6-1.2-.4-.6-3.9-6.1-7.7-12.1-3.9-6.2-6.5-11.2-5.9-11.4 2.4-.8 7.6-4.8 9.5-7.4 4.8-6.5 2.7-19.4-4.1-24.6-3.4-2.6-4.1-2.7-16.9-3l-13.3-.4v30zm22.7-18.3c4.8 3.4 3.3 13-2.5 15.4-1.6.7-4.3 1.1-5.8.9l-2.9-.3-.2-8.8-.1-8.7h4.7c2.5 0 5.6.7 6.8 1.5zM483 854v30h12v-60h-12v30zM502.2 828.7l.3 4.8 5.8.3 5.7.3V884h11v-49.9l5.8-.3 5.7-.3.3-4.8.3-4.7h-35.2l.3 4.7zM624 854v30h11v-60h-11v30zM645 854v30h11v-60h-11v30z" />
            </svg>
            <h1 style="padding-left: 2rem;">Liquidacion de AFIP. Periodo ${
              secondSplit[0]
            }-${`${Number(secondSplit[1]) + 1}`.padStart(2, "0")}/${Number(
      firstSplit[1]
    )}</h4>
          </div>
          <table style="border-collapse: collapse; border: 1px solid black; text-align: center; margin-top: 2rem">
            <thead style="font-size: 1px;">
              <th style="border: 1px solid black; font-size: 16px;">CUIT</th>
              <th style="border: 1px solid black; font-size: 16px;">Nombre Completo</th>
              <th style="border: 1px solid black; font-size: 16px;">Id de liquidacion</th>
              <th style="border: 1px solid black; font-size: 16px;">Fecha de liquidacion</th>
              <th style="border: 1px solid black; font-size: 16px;">Total factura</th>
              <th style="border: 1px solid black; font-size: 16px;">Retencion</th>
              <th style="border: 1px solid black; font-size: 16px;">Retenido</th>
            </thead>
            <tbody>
              ${filtered
                .map((liquidation) => {
                  return `<tr style="border: 1px solid black; text-align: center; font-size: 16px;">
                     <td style="border: 1px solid black;" >${
                       liquidation.person.cuit
                     }</td>
                     <td style="border: 1px solid black;" >${
                       liquidation.person.lastName
                     } ${liquidation.person.name}</td>
                     <td style="border: 1px solid black;" >${
                       liquidation.id
                     }</td>
                     <td style="border: 1px solid black;" >${new Date(
                       liquidation.createdAt
                     ).toLocaleDateString()}</td>
                     <td style="border: 1px solid black;" >$${liquidation.monthAmount.toFixed(
                       2
                     )}</td>
                     <td style="border: 1px solid black;" >${liquidation.retention.toFixed(
                       2
                     )}%</td>
                     <td style="border: 1px solid black;" >$${liquidation.retainedAmount.toFixed(
                       2
                     )}</td>
                </tr>`;
                })
                .join("")}
              <tr style="border: 1px solid black; text-align: center; font-size: 16px;">
                <td style="text-align: left; padding-left: 0.5rem;" colspan=2>Total:</td>
                <td></td>
                <td></td>
                <td style="border: 1px solid black;">$${filtered
                  .reduce((a, b) => Number(a) + Number(b.monthAmount), 0)
                  .toFixed(2)}</td>
                <td></td>
                <td style="border: 1px solid black;">$${filtered
                  .reduce((a, b) => Number(a) + Number(b.retainedAmount), 0)
                  .toFixed(2)}</td>
              </tr>
              </tbody>
              </table>
              </body>
              </html>
`;

    const pdfPath = `newFiles/Liquidacion_de_AFIP_Periodo_${
      secondSplit[0]
    }-${`${Number(secondSplit[1]) + 1}`.padStart(2, "0")}_${Number(
      firstSplit[1]
    )}`;

    const pdfCreator = async () => {
      pdf.create(content).toStream(async (err, stream) => {
        stream.pipe(fs.createWriteStream(`${pdfPath}.pdf`));
      });
      const checkTime = 1000;
      const messageFile = `${pdfPath}.pdf`;
      const timerId = new Promise((res, rej) => {
        setInterval(() => {
          const isExists = fs.existsSync(messageFile, "utf8");
          if (isExists) {
            clearInterval(timerId);
            res(messageFile);
          }
        }, checkTime);
      });
      return await timerId;
    };

    const zipTxt = async () => {
      await generateTxt();
      const checkTime = 1000;
      const messageFile = `${txtPath}.txt`;
      const timerId = new Promise((res, rej) => {
        setInterval(() => {
          const isExists = fs.existsSync(messageFile, "utf8");
          if (isExists) {
            clearInterval(timerId);
            const txtZip = new JSZip();
            const txtData = fs.readFileSync(`${txtPath}.txt`);
            txtZip.file(`${txtPath}.txt`.split("/")[1], txtData);
            txtZip
              .generateNodeStream({ type: "nodebuffer", streamFiles: true })
              .pipe(fs.createWriteStream(`${txtPath}.zip`));
            res(`${txtPath}.zip`);
          }
        }, checkTime);
      });
      return await timerId;
    };

    const zipAll = async () => {
      const pdf = await pdfCreator();
      const txt = await zipTxt();
      const zip = new JSZip();
      console.log(pdf, txt);
      if (pdf && txt) {
        //try {
        const txtZippedPath = fs.ReadStream(txt);
        const pdfData = fs.readFileSync(pdf);
        console.log(`${txt}`.split("/")[1], `${pdf}`.split("/")[1]);
        zip.file(`${txt}`.split("/")[1], txtZippedPath);
        zip.file(`${pdf}`.split("/")[1], pdfData);
        zip
          .generateNodeStream({ type: "nodebuffer", streamFiles: true })
          .pipe(fs.createWriteStream(`${pdfPath}.zip`));
        return `${pdfPath}.zip`;
      } else {
        throw new Error("Hubo un problema con la generacion del archivo");
      }
    };
    const res = await zipAll();
    return res ? res : false;
  }

  async report(id) {
    const liquidations = await models.Liquidation.findByPk(id, {
      include: ["person"],
    });
    const bills = await models.Bill.findAll({
      where: {
        liquidationId: {
          [Op.eq]: id,
        },
      },
      attributes: { exclude: ["liquidationId"] },
    });
    const creditNotes = await models.CreditNote.findAll({
      where: {
        liquidationId: {
          [Op.eq]: id,
        },
      },
      attributes: { exclude: ["liquidationId"] },
    });
    const report = {
      ...liquidations.dataValues,
      retentions: [...bills],
    };
    const creditNotesAmount = creditNotes.reduce(
      (a, b) => a + Number(b.amount),
      0
    );
    const content = `
    <!doctype html>
    <html>
       <head>
            <meta charset="utf-8">
            <title>Informe de liquidaci√≥n</title>
        </head>
        <body style="display: flex; flex-direction: column; margin: 2rem 2rem 2rem 2rem;">
          <div style="font-weight: bold; display: -webkit-box;">
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width=100
              height=100
              color='rgb(255, 17, 17)'
              viewBox="0 0 959 959"
              >
                <path d="M391.3 76.8c-1.5 1-6.5 11.2-5.4 11.2 1.4 0 8.1-7.8 8.1-9.4 0-1.9-1.3-2.7-2.7-1.8zM462.5 81.9c-10.5 2.6-16.9 10.8-16.9 21.6 0 12.6 9.4 22.5 21.4 22.5 16 0 26-17.7 18.5-32.7-2.8-5.6-7.7-9.5-14-11.2-4.4-1.2-4.7-1.2-9-.2zm11.6 10.4c4.3 2.9 5.9 6 5.9 12 0 4.2-.5 5.3-3.8 8.8-2.8 3.1-4.7 4.1-7.7 4.5-4.7.6-9.8-1.7-12.7-5.7-2.3-3.1-2.8-10.2-.9-14.6 2.9-7 12.6-9.5 19.2-5zM424.3 85.7c-1.3.2-2.3.8-2.3 1.3 0 1.6 4 35.5 4.5 38.7.4 2.4 1.1 3.3 2.5 3.3 2.6 0 17.4-2.1 17.8-2.5.2-.2.1-1.7-.3-3.4l-.6-3.1-5.8.6-5.7.6-1.8-14.3c-2.9-24.4-2.1-22.4-8.3-21.2zM506.9 87.7c-7.8 4-11.2 9.3-11.7 18.3-.3 5.6 0 7.8 1.8 11.4 5.9 12.3 20 16 30.5 8.1 3.4-2.7 7.5-10.6 7.5-14.8 0-2.3-.5-2.5-7.5-3.6-11.4-1.7-11.5-1.7-11.5 2.4 0 3 .3 3.5 2.5 3.6 1.4.1 3 .3 3.5.4.6.1 1.7.3 2.5.4 2.3.2 1.8 2-1.4 5.2-2.3 2.3-3.8 2.9-7.2 2.9-3.6 0-4.8-.6-8.5-4.4-3.9-3.9-4.4-4.8-4.4-9 0-8.8 6.1-15.6 14-15.6 3.8 0 4.8.5 8.6 4.4l4.2 4.4 2.1-2.2c2.6-2.8 2.6-3.1-.1-6.8-2.6-3.7-11-7.8-15.9-7.8-1.9 0-6 1.2-9 2.7zM389.7 91.7c-8.5 2.9-14.7 11.8-14.7 21.3 0 4.5 3.9 12.7 7.6 16.2 13.7 12.8 35.3 3 35.4-16 0-15.4-14.2-26.3-28.3-21.5zm13.4 8.8c4.2 2.2 6.9 7.1 6.9 12.5 0 15.5-20 19-25.6 4.5-1.4-3.9-1.5-5.1-.4-9.1 2.3-8 11.4-11.8 19.1-7.9zM553.3 99.2c-2.3 3.5-8.3 11.9-13.2 18.8-4.9 6.9-8.7 12.8-8.3 13.1.4.4 2.2.9 4 1.2 2.9.6 3.5.3 5.9-3.1l2.7-3.8 7.1 1.9c3.8 1.1 7.5 2.4 8.2 2.9.7.5 1.3 2.8 1.5 5.1.3 3.7.6 4.2 3.7 4.9 1.8.5 3.5.7 3.7.5.8-.8-3.1-43.9-4.1-45.3-.5-.7-2.3-1.6-4-1.9-2.8-.5-3.3-.1-7.2 5.7zm6.1 14.7c.7 7.8.6 8.3-1.1 7.7-1-.4-3-1-4.6-1.3-1.5-.3-3-1-3.3-1.5-.5-.8 7.6-14.2 8.2-13.5.1.1.5 4 .8 8.6zM353.8 103c-4.8 1.4-8.6 4.9-11.2 10.2-3.3 6.6-3.4 12.6-.2 19.4 3.1 6.7 6.9 10.1 13.4 12 5.7 1.7 9.5 1.3 15.3-1.6 5.3-2.8 6.1-4.1 4.8-8.1-1.6-4.5-1.7-4.6-3.5-2.1-5.8 8.3-19.1 5.9-22.9-4.3-2.1-5.4-1.4-10.3 2.1-14.4 2.7-3.2 8.4-5.6 11.5-4.8 2.1.6 2.4-.8.9-4.7-.8-2.1-1.6-2.6-4.2-2.5-1.8 0-4.5.4-6 .9zM585 107.2c-7.2 4.9-7.2 14.3 0 21.3 5.9 5.7 5.3 11.5-1.2 11.5-2.7 0-6.1-2.4-7-5-.3-1-1.1-.9-3.6.4-3.6 1.8-3.5 3.4.6 7.8 5.4 5.9 13.6 6.1 19.1.4 6.3-6.5 5.9-13.7-1.3-20.5-2.3-2.3-3.6-4.4-3.6-6.1 0-5.5 4.7-6.6 8.9-2.1l2.8 2.9 2.8-2.2c2.5-2 2.6-2.5 1.6-4.5-1.5-2.7-8.4-6-12.7-6.1-1.7 0-4.6 1-6.4 2.2zM323.4 116.7l-3.2 1.6 9.3 18.9c5.1 10.4 9.5 19.2 9.8 19.4.7.8 6.7-2.5 6.7-3.6 0-1.4-18.4-38-19-37.9-.3 0-1.9.7-3.6 1.6zM624.9 119.8c0 .9 0 6.5.1 12.5l.1 10.7-5 9.1c-2.8 5-4.8 9.5-4.5 10 .3.5 1.8 1.6 3.4 2.4l2.9 1.5 5-9.3 5-9.2 10.6-6.5c5.8-3.5 10.5-6.7 10.5-7 0-.4-1.6-1.4-3.6-2.4l-3.6-1.7-6.2 4.1c-3.4 2.2-6.5 4-6.9 4-.4 0-.7-3.6-.7-7.9v-7.9l-3.5-2.1c-3.2-1.8-3.5-1.9-3.6-.3zM305 125.9c-9.6 5.1-11.4 15.2-3.9 21.5 2.7 2.3 3.9 2.6 10.9 2.6 5.8 0 8.3.4 9.4 1.6 3.9 3.9-.1 9.8-6.2 9.2-3.6-.3-3.7-.2-4 3.4l-.3 3.8h4.6c5.3 0 9.5-1.9 12.4-5.6 2.9-3.7 2.8-11-.2-15.5-3.3-4.9-6.1-6-13.5-5.3-5.2.5-6.6.3-8.2-1.1-4-3.6-1.4-8.5 4.5-8.5 2.9 0 3.3-.3 3.8-3.3.2-1.7.3-3.5 0-4-.8-1.3-5.7-.7-9.3 1.2zM272.7 147.2c-5 3.4-7.6 5.8-7.4 6.8.2.8 5.2 8.2 11.2 16.5 5.9 8.2 11 15.6 11.2 16.2.7 1.8 2.1 1.6 5.4-.8l2.9-2-4.7-6.6-4.7-6.6 3.8-3c7-5.6 8.5-12.5 4.2-18.8-2.6-3.8-7.9-6.9-11.8-6.9-1.3 0-5.9 2.4-10.1 5.2zm14.8 6.9c1.8 3.4.5 7-3.2 9-2.1 1.1-2.6 1.1-3.3-.1-.5-.8-2-3-3.4-4.9-2.9-3.8-2.6-4.8 1.7-6.6 3.9-1.6 6.5-.9 8.2 2.6zM446.5 144.1c-56.9 5.3-109.8 26.4-153.9 61.2-9.1 7.2-34.3 31.5-40.6 39.2-14.8 17.9-24 31.7-34 50.7-22.7 42.9-33 84.8-33 133.8 0 30.2 3 52.3 10.6 78.7 20.1 69.6 63.4 126.8 124.8 164.8 42.5 26.2 89.5 40.3 140.6 42.2 56.2 2 112.2-13 160.5-43 23-14.3 51.5-39.1 68.1-59.3 35-42.5 55.9-89.8 64.1-144.9 2.5-17.1 2.5-60.3 0-76.5-4.5-28.6-12.7-56.9-23-79.5-28.2-61.4-73.9-108.6-134.2-138.5-28.5-14.1-57-22.8-90.5-27.5-14-1.9-45.8-2.7-59.5-1.4zm40.2 3.9c25.1 1.7 44.9 5.3 66.8 12.1 44.5 13.9 82.7 37 115.6 69.8 63.1 63.2 92.6 151.7 79.9 239.6-12.1 83.4-61.2 157.3-133.5 201-7.6 4.6-34.7 18.5-36.1 18.5-.4 0-4.7 1.6-9.6 3.6-18.1 7.2-46.5 14.1-68.8 16.5-14.8 1.7-47.3 1.7-62 0-76.3-8.6-146.9-48.6-193.1-109.6-27.8-36.6-45.6-78.2-54-126-2-11.6-2.3-16.3-2.3-43.5-.1-33.9.6-40.5 7-67 3.1-12.8 5.2-19.3 11.9-38 5.6-15.6 23.5-47.7 35.8-64 48-63.8 118.1-103.6 197.2-112 19.4-2 27.7-2.2 45.2-1z" />
                <path d="M447 178.1c-5.5.8-19.7 2.5-46.5 5.5-7.7.9-14.1 1.7-14.1 1.8-.4.3 3.7 25.8 6.1 38.1 19 97 48.2 156.3 85 172.6 2.6 1.2 8 2.4 11.9 2.8l7.1.6.7 15c.9 20.6 2.1 57.1 6.3 188 .8 25.3 1.8 53.5 2.1 62.8l.7 16.7 6.6-.6c15-1.3 29.3-3.6 37.7-6 16.2-4.7 34.6-15.2 40.2-23.2l2.1-2.9-5.8-6.8c-15.7-18.1-28.9-47.9-41.9-94.5-7.5-26.5-15-68.9-20.7-115.6-3.1-26-3.2-32.4-.7-32.4 1 0 4.9-1.9 8.8-4.2 30.5-18.3 50.3-48 61.4-91.8 4.8-19.1 6.2-30.5 6.4-53l.1-20.5-3-5.8c-5.5-10.9-19.3-21.1-32.3-23.8-8.1-1.7-27.2-.6-34.2 1.9-9.5 3.3-14.2 6.2-20.6 12.6-15.9 15.9-20.5 41.8-15 83.6 4.2 31.5 4.8 38.1 4.1 45.2-.9 8.7-2.1 10.3-6.8 9.4-5.7-1.1-9.4-5-14.2-15-7.2-15-12.8-39.6-16.9-74.1-3.1-25.2-5.3-51.2-6.1-69.5-.7-14.5-1.1-18.1-2.3-17.9-.4.1-3.2.5-6.2 1zm110.5 56.5c9.7 4.5 15.5 14.1 15.5 25.5 0 17.7-10.8 38.1-34.6 65.4-8.2 9.4-18.3 18-19.6 16.7-.6-.6-.8-17.8-.6-43.8l.3-42.9 2.6-5.5c7.4-15.9 22.3-22.1 36.4-15.4zM659 160.7c-5.7 7.6-11.4 15.2-12.7 17l-2.4 3.1 3.2 2.3 3.2 2.2 3.1-3.8c1.7-2.2 4-5 5.1-6.3l2.1-2.4 3.9 2.6c5.1 3.5 7.9 4.1 12.6 2.7 7.5-2.3 12.1-12.5 8.4-18.7-1.7-2.9-13.3-12.4-15.1-12.4-.6 0-5.7 6.2-11.4 13.7zm17.3-.9c2.5 2.2 2.2 7.7-.5 9.6-3.1 2.2-5.2 2-8.3-.7l-2.6-2.2 3.6-4.8c3.6-4.8 4.2-4.9 7.8-1.9zM239.5 174.4l-8 7.4 7.7 8.3c4.3 4.6 10.8 11.8 14.6 15.9l6.9 7.4 3.9-3.1c2.1-1.7 5.9-5.2 8.3-7.7 4.4-4.5 4.4-4.6 2.6-6.6-2.5-2.8-3.6-2.6-8 2-2.1 2.2-4.4 4-5 4-1.3 0-6.5-5.2-6.5-6.4 0-.4 2.1-2.7 4.7-5l4.6-4.2-1.8-2.7c-.9-1.5-2.3-2.7-2.9-2.7-.7 0-3.2 2-5.6 4.5l-4.4 4.5-3.8-3.7c-2.1-2-3.8-4.2-3.8-4.8 0-.6 2-2.8 4.5-4.8 2.5-2.1 4.5-4.2 4.5-4.6 0-.8-3.4-5.1-4.1-5.1-.2 0-4 3.3-8.4 7.4zM690.9 174.3c-1.9 1.3-4 3.9-4.8 6.1-1.4 3.6-1.3 4.3.7 10 2.6 7.3 2.7 8.9.6 11-3 3.1-9.4.7-9.4-3.5 0-3-1.7-4.1-4.9-3.4-3.6.8-4 2.6-1.5 7.8 1.8 3.8 8.6 8.7 12.1 8.7 3.8 0 9.9-3.7 12.2-7.3 2.6-4.3 2.6-7.3.1-12.8-2.7-6-2.6-9.3.4-10.8 3.2-1.8 6.5 0 7.3 4 .6 3 1.7 3.4 6.1 2.3 1.9-.6 2.2-1.1 1.7-3.2-.3-1.4-1.5-3.7-2.6-5.1-5-6.4-12-7.8-18-3.8zM712.8 194.3c-3.6 3.4-10.8 10.2-15.9 15l-9.2 8.9 2.9 2.9 2.9 2.9 15.3-14.6c8.3-8 15.2-15 15.2-15.4 0-.5-1-2-2.3-3.4l-2.3-2.5-6.6 6.2zM221.3 195.1c-2 .6-5.9 3.9-10.8 9.2l-7.6 8.2 5.8 5.4c3.2 2.9 10.5 9.4 16.2 14.4l10.4 9.1 5.4-6c5.5-6.1 9.3-12.9 9.3-16.8 0-4.7-3.2-11.3-7.3-15.3-7.1-7-15.2-10-21.4-8.2zm12.2 11.1c4 2.7 8.5 9.3 8.5 12.5 0 3-2.1 7.2-4.9 9.7-2 1.8-2.1 1.7-12.6-7.4-5.8-5.1-10.5-9.5-10.5-9.9 0-1 6.2-6.7 8-7.4 2.6-1.1 8.1.1 11.5 2.5zM718.2 211.2c-13.6 6.6-16.9 24.2-6.3 34 4.7 4.4 6.9 4.7 9.9 1.5l2.2-2.3-3.5-1.7c-4.5-2.1-6.8-5.9-6.8-11 0-5.8 2.6-10.3 7.3-12.7 8.9-4.5 18.3-.7 20.6 8.4l.6 2.5 3-2.2c2.5-1.8 2.9-2.7 2.4-5.1-.9-4.4-5.3-9.6-10-11.7-5.5-2.5-13.9-2.4-19.4.3zM187.2 239.3c-7.2 2.7-13.1 11.4-13.2 19.2 0 5.5 4 13.5 8.5 17.2 9.8 8.2 24.9 6.5 32-3.6 2.4-3.4 3-5.4 3.3-10.9.2-5.8-.1-7.4-2.5-11.7-3.9-6.8-10.1-10.6-18.5-11.1-3.6-.2-7.7.2-9.6.9zm15.9 8.9c6.1 3.4 8.7 11.7 5.6 17.8-1.8 3.5-7.4 7-11.4 7-4.7 0-9.9-2.6-12.4-6.2-8.6-12 5.1-26 18.2-18.6zM740.5 239.6c-8.5 3.1-13.5 10.7-13.5 20.7 0 5.6.4 7.1 3.3 11.3 4.3 6.4 9.3 8.9 17.7 8.9 10.5-.1 18.1-5.4 21.6-15.2 3.6-10.2-1.4-21.7-11.3-25.8-4.4-1.9-12.5-1.8-17.8.1zm16.1 8.6c3.7 2.9 4.2 3.5 5.5 8.1 2.8 10.4-10.3 20.3-20.2 15.2-8.6-4.5-9.2-17.5-1.1-23 4.8-3.3 11.7-3.4 15.8-.3zM768 240.9c0 1.3 10.8 5.4 12.5 4.7 2.2-.8 1.8-2.5-.7-3.5-3.6-1.3-11.8-2.1-11.8-1.2zM161.2 276.5c-.7 1.4-1.2 3-1.2 3.5 0 .9 38 20.5 38.4 19.8 0-.2.7-1.3 1.4-2.5.6-1.3 1.2-2.9 1.2-3.7 0-1.3-34.9-19.6-37.5-19.6-.6 0-1.7 1.1-2.3 2.5zM762.2 283.5c-10.5 5.2-19.2 9.7-19.2 10 0 .8 8.2 17.5 8.6 17.5 1.3 0 5.4-2.5 5.4-3.3 0-.6-1-3-2.1-5.4-1.2-2.4-2-4.6-1.8-4.8.2-.1 7.4-3.8 15.9-8 8.5-4.3 15.6-7.9 15.8-8 .2-.2-.5-1.9-1.5-3.9l-1.8-3.5-19.3 9.4zM157.1 295.3c-2.4 1.2-5.7 4.2-7.5 6.6-2.7 3.8-3.1 5.1-3.1 11 0 9.2 3.6 15.2 11.5 19.4 4.8 2.5 6.3 2.8 12.2 2.5 5.6-.3 7.4-.9 11-3.5 10.6-7.7 11.9-22.7 2.5-30.4-1.2-1-3.9-2.7-5.9-3.9l-3.8-2.1-1.9 4.3c-6 13.5-6 13.8-1.3 15.3 1.9.5 2.5 0 4.2-3.9 1-2.5 2.4-4.6 2.9-4.6 1.9 0 4.3 4.9 4.3 8.5 0 9.5-11 15.4-20.2 10.7-10.8-5.4-10.5-20.6.5-24.2l3.4-1.1-1.6-3.5c-.9-1.9-2-3.4-2.3-3.4-.4 0-2.6 1-4.9 2.3zM772.2 302.8c-5.2 2.1-11 7.5-12.9 12.1-2.4 5.6-1.9 13.5 1.2 18.7 7 12 24.3 14.1 34.4 4.2 4.7-4.6 7.1-9.9 7.1-15.5-.1-15.2-15.4-25.2-29.8-19.5zm14.6 8.2c4 2.5 7.2 7.5 7.2 11.5 0 1.6-.9 4.5-2 6.3-5.5 8.9-18 9.7-23.9 1.3-5.8-8.1 1.5-21.1 11.9-21.1 1.9 0 5 .9 6.8 2zM135.7 342.9c-3.6 12-3.5 12.7 1 13.6 2 .3 10.4 2.6 18.7 5 8.3 2.4 15.9 4.5 16.9 4.7 1.6.2 2.4-1.3 4.8-9.7 1.6-5.5 2.9-10.3 2.9-10.7 0-.3-1.4-.9-3.1-1.3-3.7-.8-4.2-.3-5.8 7.1-.7 3-1.5 5.4-1.8 5.4-.7 0-8.6-2.3-9.1-2.6-.2-.1.5-3.1 1.4-6.8 1-3.6 1.6-6.8 1.3-7.1-.3-.2-1.9-.7-3.6-1.1-2.9-.6-3-.5-4.8 6.1l-1.8 6.6-3.1-.7c-8.2-1.8-8.8-2.8-6.1-10.5 1.7-4.6 1.3-5.4-2.6-6.4-2.4-.6-2.6-.3-5.2 8.4zM789.1 348.1c-3.9 1.2-9.9 4.8-12.3 7.6-8.6 9.6-4.6 27.6 6.9 31.4 3.4 1.1 15 1.6 15.9.6.3-.3-.5-4.6-1.6-9.6l-2.2-9.2-3.1.7c-4.2.9-4.2.8-2.9 5.3.7 2.1 1.2 4.3 1.2 5 0 1.5-2.5 1.4-5.9-.3-5-2.6-6.5-9.8-3.5-16.1 2.4-5.1 5.9-6.9 13.1-7 5.5 0 6.5.3 9.2 2.9 1.7 1.6 3.6 4.5 4.2 6.3 1 3 .8 4.1-1.5 8.5-1.4 2.7-2.6 5.1-2.6 5.3 0 .1 1.4.8 3.1 1.6 3 1.2 3.3 1.1 5.5-1.6 2.9-3.6 4-11.6 2.5-17.3-2.7-9.8-16.1-17.1-26-14.1zM165.7 369.7c-.2.5-1 3.1-1.6 5.9l-1.2 5-17.2-3.3c-9.5-1.8-17.5-3.3-17.8-3.3-.7 0-2.2 7-1.7 7.6.4.3 40.4 8.4 41.9 8.4.4 0 1-1.9 1.4-4.3.3-2.3 1.1-6.6 1.7-9.5.6-2.8.9-5.4.7-5.6-1-.8-5.8-1.5-6.2-.9zM132.9 395.7c-15.9 8.1-15.7 29.2.5 37.5 5.7 3 16 2.9 20.9-.1 11.5-7.1 14.7-19 8.1-29.9-3.8-6.1-11.4-10.2-18.9-10.2-3.6 0-6.7.8-10.6 2.7zm18.2 7.6c4.6 3 7.3 8.7 6.4 13.4-.9 4.8-6 9.9-10.9 10.8-5.2 1-12.2-1.8-14.7-5.9-2.4-3.9-2.5-11.3-.3-14.5 4.3-6.1 13.4-7.9 19.5-3.8zM792 395.6c-1.9.8-4.6 2.5-5.9 3.7-3.1 2.9-7.1 11.4-7.1 15.2 0 16.6 17.4 26.6 32.9 18.9 5.6-2.8 10.4-8.8 11.6-14.6 1.9-8.4-3.2-18.4-11.5-22.6-5.3-2.6-14.6-2.9-20-.6zm17.6 8.6c4 2.8 5.4 5.6 5.4 11.2 0 7.2-6 12.7-13.9 12.8-13.5.2-19-16.9-7.8-24.1 4.5-2.9 12.1-2.8 16.3.1zM122.4 439.8c-1.7 1-2.7 8.5-1.9 13.3.6 3.2 2 5.5 5.9 9.4 4.3 4.4 6 5.5 10.7 6.5 10.6 2.3 20.4-2.1 24.8-11.3 2.4-4.9 2.6-9.2.9-14.8-1-3.7-1.4-3.9-5-3.9-2.1 0-3.8.2-3.8.4s.7 2 1.5 3.9c2.1 5 1.9 6.7-1.2 11.5-4.7 7.2-13.6 9-20.5 4-5.4-3.8-6.8-9.7-4.3-17.6.7-2 .4-2.2-2.6-2.2-1.9 0-3.9.4-4.5.8zM783.6 442.9c-4.7 5.2-4 14.9 1.5 19.5 2.5 2.1 4.1 2.6 8.5 2.6 7.3 0 8.9-1 12.3-7.8 3.8-7.5 5.4-8.9 8.7-7.4 3.5 1.6 4 3.9 1.9 7.9-1.8 3.4-1.8 3.4.6 5.1 3.4 2.4 4.2 2.2 6.1-1.8 3.7-7.3 1.3-15-5.6-18-7.6-3.4-13.6-.9-17.8 7.5-4 7.8-7 9.3-10.9 5.4-2.3-2.3-2-6 .9-9.2 1.5-1.7 1.5-2-.8-3.8-3.1-2.3-3.3-2.3-5.4 0zM758.1 550.9c-5.4 5.4-6.2 12.9-1.8 16.9 4.6 4.2 9.3 3.5 14.6-2.2 2.9-3.1 6.6-3.4 8.1-.6 1.3 2.4 0 5.4-3 7-2.4 1.3-2.5 2-.7 4.4 1.1 1.6 1.7 1.7 3.6.7 3.3-1.8 6.1-7.1 6.1-11.4 0-2.9-.7-4.6-2.9-6.8-4.4-4.3-8.7-4-14.6 1.1-5.1 4.4-5.5 4.6-7.3 2.8-1.9-1.9-1.4-5.6.8-7 2.3-1.5 2.5-2.7.7-5.3-1.3-1.7-1.5-1.7-3.6.4zM173 563.1c-2.5 1.6-8.2 5-12.7 7.6-4.6 2.6-8.3 5.1-8.3 5.6 0 1 5.2 10.1 7.3 12.8 1.9 2.5 7.9 5.9 10.3 5.9 3.7 0 10.8-3 13.8-5.8 3.7-3.5 5.8-8.5 5-12-.9-3.7-8.6-17.1-9.9-17.1-.5 0-3 1.4-5.5 3zm7.4 9.4c3.3 6.8-1.2 14.1-9.3 15.2-3.8.5-4.6.2-7.7-2.8-1.9-1.8-3.4-4-3.4-4.8.1-1.6 16.9-12.2 18.1-11.5.4.2 1.4 2 2.3 3.9zM747.5 571.2c-.4 1.1-2 4.3-3.6 7s-2.9 5.4-2.9 6.1c0 .7 2.6 2.5 5.7 4.2 3.1 1.6 9.2 4.9 13.4 7.2 4.2 2.4 7.9 4.3 8.2 4.3.3 0 2.4-3.4 4.7-7.5 3.4-6.1 4-7.9 3-9-1.9-2.2-3.5-1.8-4.9 1.2-.7 1.6-1.9 3.8-2.7 5-1.3 2.1-1.5 2.2-4.4.5-1.6-.9-3-2-3-2.5 0-.4 1.1-2.5 2.5-4.7 3.1-4.8 3.1-5.7.3-6.5-2.3-.8-5.3 2.1-6.4 6.2-.7 2.7-1.5 2.8-5.4.8-3.6-1.9-3.6-2.2-.8-8 1.9-4 2-4.7.8-5.5-2.4-1.5-3.8-1.2-4.5 1.2zM183 596.2c-6.9 4.9-12.6 9.4-12.8 9.8-.2.4 2.1 3.9 4.9 7.8 4.5 6 5.5 6.9 7.1 6.1 2.4-1.3 2.3-2.4-.6-6.2-3.7-5-3.7-5.3-.6-7.5l2.9-2.2 3.2 4.5c3.6 5 3.7 5.1 6.3 3.2 1.7-1.3 1.6-1.6-1.5-6.1l-3.3-4.7 2.9-2.4c1.7-1.3 3.3-2.4 3.7-2.5.4 0 2.1 2 3.8 4.5 2.7 4 3.4 4.4 5.1 3.4 1.2-.6 1.8-1.7 1.5-2.5-.6-1.4-9.6-14.5-9.9-14.3-.1 0-5.8 4.1-12.7 9.1zM736.2 592.7c-1.5.6-9.2 11.7-9.2 13.2 0 .9 11.1 8.5 23.1 15.8l3.5 2.2 1.7-2.8 1.7-2.9-4.5-2.9c-2.5-1.5-4.5-3.1-4.5-3.4 0-.4 3.2-.9 7-1.1 5.4-.4 7.4-1 8.5-2.4 3-4 2-4.7-6-3.9l-7.5.7v-4c0-5.9-3-9.2-8.3-9.1-2.3 0-4.8.3-5.5.6zm7 7c2.1 1.9 2.2 3.9.5 7l-1.3 2.3-3.7-2.5c-4.3-3-4.4-3.4-1.7-6.3 2.5-2.6 3.7-2.7 6.2-.5zM721.8 612.4c-2.1 2.9-2.2 2.7 13.5 14l10.7 7.8 2-2.4c1.1-1.3 1.9-2.5 1.9-2.8 0-.6-24.1-18.3-25.5-18.7-.5-.1-1.7.8-2.6 2.1zM203 622.2c-6.3 5.4-11.6 10.3-11.8 10.8-.2.4 2.2 3.4 5.2 6.6 5.1 5.5 5.6 5.8 7.2 4.2 1.6-1.6 1.5-1.8-1-4.8-1.4-1.7-2.6-3.7-2.6-4.3.1-.7 2.2-2.9 4.8-5 2.6-2.1 6.9-5.7 9.5-8.1 4.9-4.4 4.9-4.4 3.2-7-1-1.4-2-2.6-2.4-2.5-.3 0-5.8 4.6-12.1 10.1zM708.1 630.4c-1.2 2.2-.6 3.7 6.5 17.5l7.8 15.1 2.4-2.3c2.3-2.4 2.3-2.5.7-5.7l-1.7-3.2 4-4.7c3.7-4.3 4.3-4.6 8.2-4.3 3.1.2 4.6-.2 5.6-1.5.7-1 1.4-2.1 1.4-2.4 0-.8-29.8-10.9-32.1-10.9-.9 0-2.1 1.1-2.8 2.4zm13.2 7.2c2.6.9 4.7 1.9 4.7 2.4 0 1.5-4.2 6-5.1 5.4-.9-.5-4.9-7.8-4.9-8.9 0-.7.1-.7 5.3 1.1zM234 636c-.8.5-7.1 3.2-14 6-16.3 6.6-16 6.4-13.3 9.1 2 2 2.5 2.1 5.3.9 3-1.3 3.3-1.1 7.8 3.1 2.6 2.4 4.8 4.5 5 4.6.2.1-.1 1.8-.8 3.8-1.1 3.3-1 3.9.9 5.8 1.1 1.2 2.3 1.9 2.5 1.6.3-.2 3.4-7.4 7.1-15.8l6.6-15.4-2.2-2.4c-2.5-2.6-2.8-2.7-4.9-1.3zm-2 8.4c0 1.3-4 9.6-4.7 9.6-1 0-5.3-4.2-5.3-5.2 0-.5 1.9-1.7 4.3-2.8 4.3-1.9 5.7-2.3 5.7-1.6zM686.2 654c-7.2 4.4-8.9 12.1-3.6 16.7 3 2.7 6.3 2.9 12.6.6 3.9-1.4 4.9-1.4 6.2-.4 3.3 2.7.4 8.1-4.2 8.1-1.8 0-2.2.6-2.2 3s.4 3 2.3 3c3.5 0 8.7-3.7 10.2-7.5 2-4.5.9-9-2.7-12s-4-3-11.1-.6c-4.9 1.7-5.9 1.8-7.1.6-2.1-2.1-.8-5.5 2.5-6.7 2.3-.8 2.9-1.6 2.9-3.9 0-3.4-1.3-3.6-5.8-.9zM255 660.7c-1.9 2.6-6.3 8.2-9.7 12.5l-6.2 7.8 2.1 2c1.2 1.1 2.5 2 2.9 2 .3 0 2.3-2 4.3-4.5l3.7-4.4 3.6 2.4c9.2 6.3 20.3-.9 16.3-10.5-.9-2.3-11.8-12.1-13.2-12-.1 0-1.9 2.2-3.8 4.7zm9.2 6c5 4.5-1 11.1-6.4 6.9-2.3-1.7-2.2-2.2.3-5.7 2.3-3.3 3.5-3.6 6.1-1.2zM270.7 685.1l-8.7 13.1 2.4 1.9c1.3 1 2.6 1.9 2.9 1.9.3 0 1.8-2 3.4-4.5 1.5-2.5 3.1-4.5 3.6-4.5.4 0 .7 3.1.7 6.9 0 6.4.2 7.1 2.8 9.1l2.7 2.2.3-8.1c.3-8.1.3-8.1 2.8-7.5 3.7.9 8-1.3 9.9-5.2 1.8-3.9 1.3-6.8-1.8-10.2-1.9-2.1-10.8-8.2-11.9-8.2-.2 0-4.4 5.9-9.1 13.1zm15.2-2.7c4 4.2.5 8.7-5.5 7.2-2.9-.8-3-1.9-.3-6.2 2.5-4 2.9-4.1 5.8-1zM663.2 673.7c-4.4 2.1-8.9 7.4-10.3 12.2-3.1 10.3 4.5 20.1 15.6 20.1 9.9 0 17.6-7.1 18.3-16.8.3-4.7 0-6.3-2-9.2-5.1-7.5-13.9-10.1-21.6-6.3zm13.5 6.8c3.4 2.2 4.7 7.6 2.9 11.9-1.6 3.9-6.7 7.6-10.4 7.6-3.1 0-7.9-2.6-9.2-4.9-.5-1.1-1-3.8-1-6 0-3.1.7-4.6 3-7 4.3-4.3 9.6-4.8 14.7-1.6z" />
                <path d="M301.4 690c-13.2 3.1-16.8 20.1-6.1 29.1 3.1 2.7 11.3 4.9 15 4.2 13.2-2.4 18.2-17.8 8.9-27.6-4.8-5.1-11.6-7.2-17.8-5.7zm12.2 9.4c2.9 2.9 3.4 4.1 3.4 7.9 0 3.8-.5 4.9-3.1 7.1-8.3 7-20.8-.8-18-11.2 1.3-4.5 5.1-7.1 10.5-7.2 3 0 4.5.7 7.2 3.4zM640.8 690.4c-1 .7-1.8 1.7-1.8 2.1 0 .5 2.1 4.4 4.6 8.7 2.6 4.3 4.5 8 4.3 8.2-.2.2-5.3-1.6-11.3-4-12.1-4.9-13.5-5.1-16.4-2.7-2 1.8-2 1.9 6 15.5l8 13.8 2.9-1.7c1.6-1 2.9-2 2.9-2.3 0-.3-2.3-4.3-5.1-8.9-2.8-4.5-4.9-8.5-4.6-8.7.3-.3 5.5 1.5 11.6 4 11.9 5 13.7 5.3 16.6 3.2 1.7-1.2 1.4-2.1-6.1-14.9-4.3-7.5-8.3-13.6-8.9-13.6-.5 0-1.8.6-2.7 1.3zM327.6 707.1c-.3 3.4-.6 11.3-.6 17.4v11.3l2.6.6c2.3.6 3.9-.6 14.5-11.1 6.5-6.4 11.9-12.1 11.9-12.4 0-.4-1.4-1-3.1-1.4-2.9-.7-3.6-.1-10.9 7.4-4.2 4.5-8 8.1-8.4 8.1-.4 0-.4-5.3 0-11.9.7-11.4.6-11.9-1.4-13-3.4-1.8-3.9-1.3-4.6 5zM605.8 708.7c-4.3 2-7.8 4-7.8 4.5 0 1.8 13 28.3 13.8 28.1.4-.1 4.3-1.8 8.5-3.7 7.2-3.2 7.7-3.7 6.7-5.6-1.3-2.5-2.1-2.5-7 0-2.2 1.1-4.2 2-4.4 2-.3 0-1.2-1.3-2-2.9-1.8-3.3-1.4-3.8 4.7-6.6 3.8-1.8 4.4-2.9 2.8-5.4-.8-1.2-1.7-1.1-6.1.8-2.9 1.2-5.4 2.1-5.6 1.9-.2-.2-1-2-1.8-4l-1.5-3.6 4.9-2.1c5.1-2.2 5.5-2.7 4.4-5.5-.8-2.1-.7-2.1-9.6 2.1zM357.6 718.2c-7.6 20.4-9.3 25.4-8.7 26 .3.4 1.7.9 3.1 1.3 2.5.6 2.7.2 8.1-14.2 5.7-15.2 5.8-15.3 1.2-16.7-1.8-.6-2.3-.1-3.7 3.6zM590.8 715.7c-2.5.6-2.3 1.7 1.8 12.9 1.9 5.4 3.3 10.8 3 11.9-.6 2.3-4.4 4.5-7.6 4.5-2.1 0-5.6-4-6.5-7.3-.3-1.2-1.7-5.4-3.1-9.4l-2.5-7.1-3 1c-1.6.5-2.9 1.5-2.9 2.1 0 .7 1.4 5.4 3.2 10.6 5.5 15.7 10.4 18.9 21.8 14 3.6-1.5 5.3-3 6.5-5.6 1.6-3.4 1.6-3.9-.1-9.7-5.2-17.1-6.3-19.1-10.6-17.9zM368 720.5c-.5 1.4-1.3 3.8-1.6 5.3-.3 1.5-2 7.1-3.6 12.5-1.7 5.4-2.9 9.9-2.7 10.1.2.2 1.8.7 3.5 1 2.9.6 3.2.4 3.8-2.1 1.9-7.4 4.9-16.3 5.6-16.3.4 0 1 .9 1.3 2 .3 1.1 2.2 6.5 4.4 11.9 3.6 9.5 5.6 12.1 9.3 12.1.8 0 4.5-11.1 7.5-22.5.8-2.8 1.6-5.7 2-6.6.5-1.2-.2-2-2.5-2.7-3.5-1.3-3.3-1.6-7.1 10.8-1.2 3.9-2.5 6.8-2.9 6.3-.4-.4-2.6-5.7-5-11.6-2.4-6-5-11.2-6.1-11.7-3-1.6-4.9-1.1-5.9 1.5zM556 727.3c-2.5.4-6.1 1.3-8.1 1.8l-3.6.9 3.7 15.2c2.1 8.4 4.2 15.4 4.8 15.6 1.8.6 16.6-3.9 18.4-5.5 4-3.6 2.6-13.3-2.1-14.8-1.6-.5-1.9-1.4-1.8-4.9.1-3-.4-5-1.6-6.4-2.4-2.6-4.3-3-9.7-1.9zm4.2 7.1c1.5 2.2.7 3.7-2.4 5.1-3.8 1.6-3.6 1.7-4.8-2.4-.8-2.8-.6-3.3 1.3-4 2.4-.9 4.8-.4 5.9 1.3zm5.8 12.1c2.6 3.1-1.5 7.5-7 7.5-2.5 0-4-6.7-1.9-8.1 2.2-1.4 7.5-1 8.9.6zM406.8 732c-12.6 6.8-12.3 23.2.6 29.1 5.5 2.5 11.2 2.5 12.6 0 1.8-3.4 1.1-4-4.1-3.9-4.5 0-5.6-.4-8.3-3.1-5.8-5.8-3.4-14.9 4.5-17.2 4-1.2 4.6-1.2 11 1.5 1.2.5 1.8 0 2.1-1.9.7-3.5-2.7-5.7-9.5-6.2-3.8-.2-6.2.2-8.9 1.7zM429.5 735.2c-2.1 12.5-4.2 28.4-3.8 29 .9 1.6 6.2.8 6.7-1 .8-2.9 4-29.2 3.5-29.6-.2-.2-1.6-.6-3.1-1-2.5-.6-2.8-.3-3.3 2.6zM520.6 733.1c-3.2.5-6.1 1.1-6.5 1.4-.6.7 3.4 30.4 4.3 31.2.3.4 4.4.1 9.1-.6 8.1-1.2 8.5-1.4 8.5-3.8 0-2.5-.1-2.5-5.9-1.9l-5.9.7-.7-3.2c-.8-3.5.4-4.9 4.5-4.9 5.1-.1 6.7-1 6.2-3.7-.5-2.4-.6-2.4-6.3-1.8l-5.9.7-.1-3.1c-.1-1.7-.2-3.7-.3-4.3-.1-.8 2-1.6 5.2-2.1 4.6-.8 5.2-1.1 5.2-3.3 0-2.7-1-2.8-11.4-1.3zM444.6 749.9c-4.2 8.3-7.6 15.2-7.6 15.5 0 .3 1.5.6 3.4.6 2.8 0 3.6-.5 4.6-3.1 1.3-3 1.5-3.1 5.8-2.5 2.5.3 5.5.6 6.8.6 1.8 0 2.8.9 3.8 3.5 1.3 3 2 3.5 4.7 3.5 2.3 0 3-.4 2.5-1.5-.3-.8-1.7-5.4-3.1-10.2-6.5-21.7-6.3-21.3-10-21.3-3.3 0-3.5.2-10.9 14.9zm12.3-1c1.9 5.9 1.6 6.7-2.9 6.3-2.2-.2-4-.8-4-1.3 0-1.8 4.5-9.7 5.1-9.1.4.4 1.1 2.2 1.8 4.1zM488.6 735.8l-5.9.3.6 11.2c.4 6.2.7 13.4.7 16.1v4.9l8.9-.5c10.7-.6 14.3-2.4 17.3-8.6 3.8-8.1.7-19.7-6.1-22.4-3.1-1.2-7.5-1.5-15.5-1zm12.9 7.6c2.9 2.9 3.9 6.5 3.1 10.9-.8 4.5-4.2 7.5-9.4 8.3l-4.2.7v-4.4c0-2.4-.3-7.4-.7-11.2l-.6-6.7h4.7c3.6 0 5.2.5 7.1 2.4zM367.7 824.4c-4.6 1.7-6.1 2.9-8.8 7.2-3.4 5.6-2.5 15.9 1.9 20.8.9 1 5.2 3.6 9.4 5.7 10.3 5.2 12.4 9.4 7.2 14.6-2.1 2.1-3.2 2.5-6.6 2-2.2-.3-5-1.5-6.2-2.6-1.2-1.2-2.5-2.1-2.9-2.1-.4 0-1.9 1.8-3.4 4.1l-2.7 4 3 2.4c4.3 3.6 8.9 4.8 15.5 4.2 6.9-.6 11.1-3.2 13.8-8.5 2.6-5.3 3.3-8.8 2.5-13.9-.9-6-4.4-9.8-12.7-13.9-3.8-1.8-7.6-3.9-8.3-4.5-2-1.7-1.7-7.3.4-9.2 2.7-2.4 8.1-2.1 11 .5l2.4 2.3 3.4-4c1.8-2.2 3.2-4.4 3.1-5-1.3-4-15.2-6.7-22-4.1zM557.2 824.9c-16.6 5.7-24.6 27.7-16.1 44.4 3 5.8 10.4 12.4 16.2 14.3 6.5 2.2 17.6 1.5 23.2-1.4 9.4-4.8 15.6-14.6 16.3-25.8 1.5-22.8-18.6-38.8-39.6-31.5zm20.5 13c10.2 7.4 11 23.3 1.5 31.3C566.5 879.9 549 871 549 854c0-11.6 7.3-19 18.6-19 5.2 0 6.7.4 10.1 2.9zM281 854v30h14.3c13.6 0 14.4-.2 19.2-2.8 10-5.5 14.3-15.5 13.2-30.9-.8-11.1-2.2-14.9-7.6-20.3-5.6-5.6-7.3-6-25.8-6H281v30zm27-18.2c2.5 1.2 4.3 3.3 6.3 7.2 2.5 4.9 2.8 6.3 2.4 12.6-.7 12.8-6.2 18.4-17.9 18.4h-6.7v-18.5c0-10.3.3-19.3.6-20 .8-2.2 10.9-2 15.3.3zM337 854v30h12v-60h-12v30zM395.2 828.7l.3 4.8 5.8.3 5.7.3V884h11v-49.9l5.8-.3 5.7-.3.3-4.8.3-4.7h-35.2l.3 4.7zM437 853.8c0 21 .3 30.1 1.1 30.4.6.2 3.2.1 5.7-.2l4.6-.5-.2-10.8c-.1-5.9.2-10.7.6-10.7.4 0 3.9 4.9 7.7 11l7 10.9h6.3c4.8.1 6.1-.2 5.6-1.2-.4-.6-3.9-6.1-7.7-12.1-3.9-6.2-6.5-11.2-5.9-11.4 2.4-.8 7.6-4.8 9.5-7.4 4.8-6.5 2.7-19.4-4.1-24.6-3.4-2.6-4.1-2.7-16.9-3l-13.3-.4v30zm22.7-18.3c4.8 3.4 3.3 13-2.5 15.4-1.6.7-4.3 1.1-5.8.9l-2.9-.3-.2-8.8-.1-8.7h4.7c2.5 0 5.6.7 6.8 1.5zM483 854v30h12v-60h-12v30zM502.2 828.7l.3 4.8 5.8.3 5.7.3V884h11v-49.9l5.8-.3 5.7-.3.3-4.8.3-4.7h-35.2l.3 4.7zM624 854v30h11v-60h-11v30zM645 854v30h11v-60h-11v30z" />
            </svg>
            <h1 style="padding-left: 8rem;">Informe de liquidaci√≥n</h4>
          </div>
          <div style="font-weight: bold; display: -webkit-box;">
            <div style="border: 1px solid black; padding: 0.5rem 0.5rem 0.5rem 0.5rem; width: 47%; margin-right: 0.5rem">
              <p>Nombre completo: ${report.person.lastName} ${
      report.person.name
    }</p>
              <p>CUIT: ${report.person.cuit.slice(
                0,
                2
              )}-${report.person.cuit.slice(2, 10)}-${report.person.cuit.slice(
      10,
      12
    )}</p>
              <p>Fecha de liquidaci√≥n: ${new Date(
                report.createdAt
              ).toLocaleString()}</p>
            </div>
            <div style="border: 1px solid black; padding: 0.5rem 0.5rem 0.5rem 0.5rem; width: 47%;">
                <p>Colegio de Psic√≥logas y Psic√≥logos de Trenque Lauquen</p>
                <p>CUIT: 30-66735450-8</p>
                <p>Fecha y hora de emisi√≥n: ${new Date().toLocaleString()}</p>
            </div>
          </div>
          <table style="border-collapse: collapse; border: 1px solid black; text-align: center; margin-top: 2rem">
            <thead style="font-size: 1px;">
              <th style="border: 1px solid black; font-size: 16px;">N√∫mero de factura</th>
              <th style="border: 1px solid black; font-size: 16px;">Fecha de factura</th>
              <th style="border: 1px solid black; font-size: 16px;">Importe luego de impuestos</th>
              <th style="border: 1px solid black; font-size: 16px;">Tipo de factura</th>
              <th style="border: 1px solid black; font-size: 16px;">Importe antes de impuestos</th>
              <th style="border: 1px solid black; font-size: 16px;">Gastos administrativos</th>
              <th style="border: 1px solid black; font-size: 16px;">Importe luego de gastos administrativos</th>
            </thead>
            <tbody>
              ${`${report.retentions.map((retention) => {
                return `<tr style="border: 1px solid black; text-align: center; font-size: 16px;">
                     <td style="border: 1px solid black;" >${
                       retention.billNumber
                     }</td>
                     <td style="border: 1px solid black;" >${new Date(
                       retention.billDate
                     ).toLocaleDateString()}</td>
                     <td style="border: 1px solid black;" >$${
                       retention.initialAmount
                     }</td>
                     <td style="border: 1px solid black;" >${
                       retention.billType
                     }</td>
                     <td style="border: 1px solid black;" >$${
                       retention.finalAmount
                     }</td>
                     <td style="border: 1px solid black;" >${
                       retention.adminExpenses
                     }%</td>
                     <td style="border: 1px solid black;" >$${(
                       retention.finalAmount *
                       (1 - retention.adminExpenses / 100)
                     ).toFixed(2)}</td>
                </tr>`;
              })}`
                .split(",")
                .join("")}
              <tr style="border: 1px solid black; text-align: center; font-size: 16px;">
                <td style="text-align: left; padding-left: 0.5rem;" colspan=2>Subtotal:</td>
                <td> </td>
                <td> </td>
                <td> </td>
                <td> </td>
                <td>$${report.monthAmount.toFixed(2)}</td>
              </tr>
              <tr style="border: 1px solid black; text-align: center; font-size: 16px;">
                <td style="text-align: left; padding-left: 0.5rem;" colspan=2>Retenci√≥n aplicada:</td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td>${report.retention.toFixed(2)}%</td>
              </tr>
              <tr style="border: 1px solid black; text-align: center; font-size: 16px;">
                <td style="text-align: left; padding-left: 0.5rem;" colspan=2>Monto retenido:</td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td>-$${report.retainedAmount.toFixed(2)}</td>
              </tr>
              <tr style="border: 1px solid black; text-align: center; font-size: 16px;">
                <td style="text-align: left; padding-left: 0.5rem;" colspan=2>Nota/s de cr√©dito:</td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td>$${creditNotesAmount.toFixed(2)}</td>
              </tr>
              <tr style="border: 1px solid black; text-align: center; font-size: 16px;">
                <td style="text-align: left; padding-left: 0.5rem;" colspan=2>Total:</td>
                <td></td>
                <td></td>
                <td></td>
                <td></td>
                <td>$${(
                  report.monthAmount -
                  report.retainedAmount +
                  creditNotesAmount
                ).toFixed(2)}</td>
              </tr>
            </tbody>
          </table>
        </body>
    </html>
`;
    return content;
  }

  async findOne(id) {
    const liquidation = await models.Liquidation.findByPk(id);
    if (!liquidation) {
      throw boom.notFound("Liquidation not found");
    }
    return liquidation;
  }

  async find() {
    const liquidations = await models.Liquidation.findAll({
      include: ["person"],
    });
    return liquidations;
  }

  async update(id, changes) {
    const liquidation = await this.findOne(id);
    const rta = await liquidation.update(changes);
    return rta;
  }

  async delete(id) {
    const liquidation = await this.findOne(id);
    if (!liquidation.state) {
      const bills = await models.Bill.findAll({
        where: {
          liquidationId: {
            [Op.eq]: id,
          },
        },
      });
      const creditNotes = await models.CreditNote.findAll({
        where: {
          liquidationId: {
            [Op.eq]: id,
          },
        },
      });
      try {
        bills.map(async (bill) => await bill.update({ liquidationId: null }));
        creditNotes.map(
          async (creditNote) => await creditNote.update({ liquidationId: null })
        );
        await liquidation.update({ state: true });
      } catch (e) {
        throw new Error("Hubo un error interno, vulva a intentarlo luego");
      }
    } else {
      throw new Error("La liquidacion ya se encuentra anulada");
    }
    return { id };
  }
}

module.exports = LiquidationService;
